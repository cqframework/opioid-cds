<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation startLine="69" startChar="3" endLine="69" endChar="39" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <identifier id="OpioidCDS_DSTU2_REC_07" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="1.0.2"/>
   </usings>
   <includes>
      <def localIdentifier="Common" path="OpioidCDSCommonDSTU2" version="0.1.0"/>
   </includes>
   <parameters>
      <def name="ContextPrescriptions" accessLevel="Public">
         <parameterTypeSpecifier xsi:type="ListTypeSpecifier">
            <elementType name="fhir:MedicationOrder" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def name="Risk Assessment Interval" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Today"/>
               <operand value="91" unit="days" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Today"/>
               <operand value="1" unit="day" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Encounter Interval" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Subtract">
                  <operand xsi:type="Today"/>
                  <operand value="12" unit="months" xsi:type="Quantity"/>
               </operand>
               <operand value="1" unit="days" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Today"/>
               <operand value="1" unit="day" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Validate Trigger Event" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="triggerScript">
                  <expression name="ContextPrescriptions" xsi:type="ParameterRef"/>
               </source>
               <where xsi:type="InValueSet">
                  <code name="ToCode" libraryName="Common" xsi:type="FunctionRef">
                     <operand xsi:type="Indexer">
                        <operand path="coding" xsi:type="Property">
                           <source path="medicationCodeableConcept" scope="triggerScript" xsi:type="Property"/>
                        </operand>
                        <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                     </operand>
                  </code>
                  <valueset name="Ambulatory Abuse Potential Opioids" libraryName="Common"/>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Exclusion Criteria" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>
            <operand name="Is Context Prescription End of Life Opioid?" libraryName="Common" xsi:type="FunctionRef">
               <operand name="ContextPrescriptions" xsi:type="ParameterRef"/>
            </operand>
         </expression>
      </def>
      <def name="Opioid Risk Assessment in Past 90 Days" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="riskAssessment">
               <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                  <codes name="Risk Assessment" libraryName="Common" xsi:type="ValueSetRef"/>
               </expression>
            </source>
            <where precision="Day" xsi:type="In">
               <operand xsi:type="DateFrom">
                  <operand path="value" xsi:type="Property">
                     <source path="start" xsi:type="Property">
                        <source path="performedPeriod" scope="riskAssessment" xsi:type="Property"/>
                     </source>
                  </operand>
               </operand>
               <operand name="Risk Assessment Interval" xsi:type="ExpressionRef"/>
            </where>
         </expression>
      </def>
      <def name="Rx Active 7 of Past 10 Days With Encounter" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="AnyTrue">
               <source name="ProbableDaysInRange" libraryName="Common" xsi:type="FunctionRef">
                  <operand name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
                  <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <operand valueType="t:Integer" value="7" xsi:type="Literal"/>
               </source>
            </operand>
            <operand xsi:type="Exists">
               <operand xsi:type="Query">
                  <source alias="E">
                     <expression dataType="fhir:Encounter" xsi:type="Retrieve"/>
                  </source>
                  <where precision="Day" xsi:type="In">
                     <operand xsi:type="DateFrom">
                        <operand path="value" xsi:type="Property">
                           <source path="start" xsi:type="Property">
                              <source path="period" scope="E" xsi:type="Property"/>
                           </source>
                        </operand>
                     </operand>
                     <operand name="Encounter Interval" xsi:type="ExpressionRef"/>
                  </where>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="Rx Active 63 of Past 90 Days" context="Patient" accessLevel="Public">
         <expression xsi:type="AnyTrue">
            <source name="ProbableDaysInRange" libraryName="Common" xsi:type="FunctionRef">
               <operand name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
               <operand valueType="t:Integer" value="90" xsi:type="Literal"/>
               <operand valueType="t:Integer" value="63" xsi:type="Literal"/>
            </source>
         </expression>
      </def>
      <def name="Inclusion Criteria" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="And">
               <operand xsi:type="And">
                  <operand name="Validate Trigger Event" xsi:type="ExpressionRef"/>
                  <operand xsi:type="Not">
                     <operand name="Exclusion Criteria" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
               <operand xsi:type="Not">
                  <operand xsi:type="Exists">
                     <operand name="Opioid Risk Assessment in Past 90 Days" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
            </operand>
            <operand xsi:type="Or">
               <operand name="Rx Active 7 of Past 10 Days With Encounter" xsi:type="ExpressionRef"/>
               <operand name="Rx Active 63 of Past 90 Days" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="Get Indicator" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Get Summary" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then valueType="t:String" value="Patients on opioid therapy should be evaluated for benefits and harms within 1 to 4 weeks of starting opioid therapy and every 3 months or more subsequently." xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Get Detail" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then xsi:type="If">
               <condition asType="t:Boolean" xsi:type="As">
                  <operand name="Rx Active 63 of Past 90 Days" xsi:type="ExpressionRef"/>
               </condition>
               <then valueType="t:String" value="No evaluation for benefits and harms associated with opioid therapy has been performed for the patient in the past 3 months" xsi:type="Literal"/>
               <else valueType="t:String" value="No evaluation for benefits and harms has been performed for the patient starting opioid therapy" xsi:type="Literal"/>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
   </statements>
</library>

