<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
    <annotation message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
    <annotation message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
    <identifier id="OpioidCDS_REC_04" version="1.1.1"/>
    <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
    <usings>
        <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
        <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
    </usings>
    <includes>
        <def localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
        <def localIdentifier="Common" path="OpioidCDS_Common" version="1.1.1"/>
    </includes>
    <parameters>
        <def name="ContextPrescriptions" accessLevel="Public">
            <parameterTypeSpecifier xsi:type="ListTypeSpecifier">
                <elementType name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
            </parameterTypeSpecifier>
        </def>
    </parameters>
    <statements>
        <def name="Patient" context="Patient">
            <expression xsi:type="SingletonFrom">
                <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
            </expression>
        </def>
        <def name="Inclusion Period" context="Patient" accessLevel="Public">
            <expression lowClosed="true" highClosed="true" xsi:type="Interval">
                <low xsi:type="Subtract">
                    <operand xsi:type="Today"/>
                    <operand value="91" unit="days" xsi:type="Quantity"/>
                </low>
                <high xsi:type="Subtract">
                    <operand xsi:type="Today"/>
                    <operand value="1" unit="days" xsi:type="Quantity"/>
                </high>
            </expression>
        </def>
        <def name="Encounter Period" context="Patient" accessLevel="Public">
            <expression lowClosed="true" highClosed="true" xsi:type="Interval">
                <low xsi:type="Subtract">
                    <operand xsi:type="Subtract">
                        <operand xsi:type="Today"/>
                        <operand value="12" unit="months" xsi:type="Quantity"/>
                    </operand>
                    <operand value="1" unit="days" xsi:type="Quantity"/>
                </low>
                <high xsi:type="Subtract">
                    <operand xsi:type="Today"/>
                    <operand value="1" unit="days" xsi:type="Quantity"/>
                </high>
            </expression>
        </def>
        <def name="Trigger Event Prescriptions" context="Patient" accessLevel="Public">
            <expression xsi:type="Query">
                <source alias="triggerScripts">
                    <expression name="ContextPrescriptions" xsi:type="ParameterRef"/>
                </source>
                <where xsi:type="And">
                    <operand xsi:type="InValueSet">
                        <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                            <operand asType="fhir:CodeableConcept" xsi:type="As">
                                <operand path="medication" scope="triggerScripts" xsi:type="Property"/>
                            </operand>
                        </code>
                        <valueset name="Ambulatory Abuse Potential Opioids" libraryName="Common"/>
                    </operand>
                    <operand xsi:type="InValueSet">
                        <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                            <operand asType="fhir:CodeableConcept" xsi:type="As">
                                <operand path="medication" scope="triggerScripts" xsi:type="Property"/>
                            </operand>
                        </code>
                        <valueset name="Long Acting Opioids" libraryName="Common"/>
                    </operand>
                </where>
            </expression>
        </def>
        <def name="Validate Trigger Event" context="Patient" accessLevel="Public">
            <expression xsi:type="Exists">
                <operand name="Trigger Event Prescriptions" xsi:type="ExpressionRef"/>
            </expression>
        </def>
        <def name="Exclusion Criteria" context="Patient" accessLevel="Public">
            <expression name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>
        </def>
        <def name="Inclusion Criteria" context="Patient" accessLevel="Public">
            <expression xsi:type="And">
                <operand xsi:type="And">
                    <operand xsi:type="And">
                        <operand xsi:type="And">
                            <operand xsi:type="GreaterOrEqual">
                                <operand precision="Year" xsi:type="CalculateAge">
                                    <operand path="birthDate.value" xsi:type="Property">
                                        <source name="Patient" xsi:type="ExpressionRef"/>
                                    </operand>
                                </operand>
                                <operand valueType="t:Integer" value="18" xsi:type="Literal"/>
                            </operand>
                            <operand name="Validate Trigger Event" xsi:type="ExpressionRef"/>
                        </operand>
                        <operand xsi:type="Not">
                            <operand name="Exclusion Criteria" xsi:type="ExpressionRef"/>
                        </operand>
                    </operand>
                    <operand xsi:type="Not">
                        <operand xsi:type="Exists">
                            <operand xsi:type="Query">
                                <source alias="orders">
                                    <expression name="Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
                                </source>
                                <where precision="Day" xsi:type="In">
                                    <operand xsi:type="DateFrom">
                                        <operand path="value" xsi:type="Property">
                                            <source path="authoredOn" scope="orders" xsi:type="Property"/>
                                        </operand>
                                    </operand>
                                    <operand name="Inclusion Period" xsi:type="ExpressionRef"/>
                                </where>
                            </operand>
                        </operand>
                    </operand>
                </operand>
                <operand xsi:type="Exists">
                    <operand xsi:type="Query">
                        <source alias="encounters">
                            <expression dataType="fhir:Encounter" xsi:type="Retrieve"/>
                        </source>
                        <where precision="Day" xsi:type="In">
                            <operand xsi:type="DateFrom">
                                <operand path="value" xsi:type="Property">
                                    <source path="start" xsi:type="Property">
                                        <source path="period" scope="encounters" xsi:type="Property"/>
                                    </source>
                                </operand>
                            </operand>
                            <operand name="Encounter Period" xsi:type="ExpressionRef"/>
                        </where>
                    </operand>
                </operand>
            </expression>
        </def>
        <def name="Get Indicator" context="Patient" accessLevel="Public">
            <expression xsi:type="If">
                <condition asType="t:Boolean" xsi:type="As">
                    <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                </condition>
                <then valueType="t:String" value="warning" xsi:type="Literal"/>
                <else asType="t:String" xsi:type="As">
                    <operand xsi:type="Null"/>
                </else>
            </expression>
        </def>
        <def name="Get Summary" context="Patient" accessLevel="Public">
            <expression xsi:type="If">
                <condition asType="t:Boolean" xsi:type="As">
                    <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                </condition>
                <then valueType="t:String" value="Recommend use of immediate-release opioids instead of extended release/long acting opioids when starting patient on opioids." xsi:type="Literal"/>
                <else asType="t:String" xsi:type="As">
                    <operand xsi:type="Null"/>
                </else>
            </expression>
        </def>
        <def name="Get Detail" context="Patient" accessLevel="Public">
            <expression xsi:type="If">
                <condition asType="t:Boolean" xsi:type="As">
                    <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                </condition>
                <then xsi:type="Concatenate">
                    <operand valueType="t:String" value="The following medication request(s) release rates should be re-evaluated: " xsi:type="Literal"/>
                    <operand xsi:type="Combine">
                        <source xsi:type="Query">
                            <source alias="X">
                                <expression name="GetMedicationNames" libraryName="Common" xsi:type="FunctionRef">
                                    <operand name="Trigger Event Prescriptions" xsi:type="ExpressionRef"/>
                                </expression>
                            </source>
                            <return distinct="false">
                                <expression xsi:type="SingletonFrom">
                                    <operand name="X" xsi:type="AliasRef"/>
                                </expression>
                            </return>
                        </source>
                        <separator valueType="t:String" value=", " xsi:type="Literal"/>
                    </operand>
                </then>
                <else asType="t:String" xsi:type="As">
                    <operand xsi:type="Null"/>
                </else>
            </expression>
        </def>
    </statements>
</library>
