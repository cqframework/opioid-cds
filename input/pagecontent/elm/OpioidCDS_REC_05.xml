<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
    <identifier id="OpioidCDS_REC_05" version="1.1.1"/>
    <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
    <usings>
        <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
        <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
    </usings>
    <includes>
        <def localIdentifier="Common" path="OpioidCDS_Common" version="1.1.1"/>
    </includes>
    <parameters>
        <def name="ContextPrescriptions" accessLevel="Public">
            <parameterTypeSpecifier xsi:type="ListTypeSpecifier">
                <elementType name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
            </parameterTypeSpecifier>
        </def>
    </parameters>
    <statements>
        <def name="Patient" context="Patient">
            <expression xsi:type="SingletonFrom">
                <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
            </expression>
        </def>
        <def name="Exclusion Criteria" context="Patient" accessLevel="Public">
            <expression name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>
        </def>
        <def name="Total MME" context="Patient" accessLevel="Public">
            <expression name="TotalMME" libraryName="Common" xsi:type="FunctionRef">
                <operand xsi:type="Union">
                    <operand name="ContextPrescriptions" xsi:type="ParameterRef"/>
                    <operand name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
                </operand>
            </expression>
        </def>
        <def name="Inclusion Criteria" context="Patient" accessLevel="Public">
            <expression xsi:type="And">
                <operand xsi:type="And">
                    <operand xsi:type="GreaterOrEqual">
                        <operand precision="Year" xsi:type="CalculateAge">
                            <operand path="birthDate.value" xsi:type="Property">
                                <source name="Patient" xsi:type="ExpressionRef"/>
                            </operand>
                        </operand>
                        <operand valueType="t:Integer" value="18" xsi:type="Literal"/>
                    </operand>
                    <operand xsi:type="Not">
                        <operand name="Exclusion Criteria" xsi:type="ExpressionRef"/>
                    </operand>
                </operand>
                <operand xsi:type="GreaterOrEqual">
                    <operand name="Total MME" xsi:type="ExpressionRef"/>
                    <operand value="50" unit="mg/d" xsi:type="Quantity"/>
                </operand>
            </expression>
        </def>
        <def name="Taper Now" context="Patient" accessLevel="Public">
            <expression xsi:type="GreaterOrEqual">
                <operand path="value" xsi:type="Property">
                    <source name="Total MME" xsi:type="ExpressionRef"/>
                </operand>
                <operand xsi:type="ToDecimal">
                    <operand valueType="t:Integer" value="90" xsi:type="Literal"/>
                </operand>
            </expression>
        </def>
        <def name="Consider Tapering" context="Patient" accessLevel="Public">
            <expression xsi:type="Less">
                <operand path="value" xsi:type="Property">
                    <source name="Total MME" xsi:type="ExpressionRef"/>
                </operand>
                <operand xsi:type="ToDecimal">
                    <operand valueType="t:Integer" value="90" xsi:type="Literal"/>
                </operand>
            </expression>
        </def>
        <def name="Get Indicator" context="Patient" accessLevel="Public">
            <expression xsi:type="If">
                <condition asType="t:Boolean" xsi:type="As">
                    <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                </condition>
                <then valueType="t:String" value="warning" xsi:type="Literal"/>
                <else asType="t:String" xsi:type="As">
                    <operand xsi:type="Null"/>
                </else>
            </expression>
        </def>
        <def name="Get Summary" context="Patient" accessLevel="Public">
            <expression xsi:type="If">
                <condition asType="t:Boolean" xsi:type="As">
                    <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                </condition>
                <then xsi:type="Concatenate">
                    <operand valueType="t:String" value="High risk for opioid overdose - " xsi:type="Literal"/>
                    <operand xsi:type="Case">
                        <caseItem>
                            <when name="Taper Now" xsi:type="ExpressionRef"/>
                            <then valueType="t:String" value="taper now" xsi:type="Literal"/>
                        </caseItem>
                        <else valueType="t:String" value="consider tapering" xsi:type="Literal"/>
                    </operand>
                </then>
                <else asType="t:String" xsi:type="As">
                    <operand xsi:type="Null"/>
                </else>
            </expression>
        </def>
        <def name="Get Detail" context="Patient" accessLevel="Public">
            <expression xsi:type="If">
                <condition asType="t:Boolean" xsi:type="As">
                    <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                </condition>
                <then xsi:type="Concatenate">
                    <operand xsi:type="Concatenate">
                        <operand valueType="t:String" value="Total morphine milligram equivalent (MME) is " xsi:type="Literal"/>
                        <operand xsi:type="ToString">
                            <operand name="Total MME" xsi:type="ExpressionRef"/>
                        </operand>
                    </operand>
                    <operand valueType="t:String" value=". Taper to less than 50." xsi:type="Literal"/>
                </then>
                <else asType="t:String" xsi:type="As">
                    <operand xsi:type="Null"/>
                </else>
            </expression>
        </def>
    </statements>
</library>
