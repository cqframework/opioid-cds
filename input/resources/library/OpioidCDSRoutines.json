{
  "resourceType": "Library",
  "id": "OpioidCDSRoutines",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines",
  "version": "1.2.3",
  "name": "OpioidCDSRoutines",
  "title": "Library - Opioid CDS Subroutines Logic",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": {
      "reference": "Library/FHIR-ModelInfo"
    }
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": {
      "reference": "Library/FHIRHelpers"
    }
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": {
      "reference": "Library/OpioidCDSCommon"
    }
  }, {
    "type": "depends-on",
    "display": "Library Config",
    "resource": {
      "reference": "Library/OpioidCDSCommonConfig"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Diagnosis Condition Category",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/encounter-diagnosis-condition-category"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Problem List Condition Category",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/problem-list-condition-category"
    }
  }, {
    "type": "depends-on",
    "display": "Value set US Core Health Concern Condition Category",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/us-core-health-concern-condition-category"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Limited life expectancy conditions",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/limited-life-expectancy-conditions"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-clinical-status-active"
    }
  }, {
    "type": "depends-on",
    "display": "Value set CDC malignant cancer conditions",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/cdc-malignant-cancer-conditions"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Oncology specialty designations (NUCC)",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/oncology-specialty-designations"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Office Visit",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/office-visit"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Active MedicationRequest",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/medicationrequest-status-active"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Opioid analgesics with ambulatory misuse potential",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/opioid-analgesics-with-ambulatory-misuse-potential"
    }
  }, {
    "type": "depends-on",
    "display": "Value set Community",
    "resource": {
      "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/medicationrequest-category-community"
    }
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Palliative Care Lookback Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Conditions Indicating End Of Life Present",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Encounter Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Active Cancer Diagnoses",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Oncologist Practitioner Roles",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "PractitionerRole"
  }, {
    "name": "Encounters with Cancer Diagnosis During Encounter Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Number of Enounters with Cancer Diagnosis During Encounter Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Has Two or More Encounters with Cancer Diagnosis During Encounter Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Active Cancer Treatment?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Conditions Including Cancer To Exclude Opioid Management Indicating End-Stage Disease Present",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Opioid Review Useful?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Prescription/Dispense Inclusion Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Report Inclusion Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Opioid RX with Ambulatory Abuse Potential In Past 90 Days",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Has Opioid RX with Ambulatory Abuse Potential In Past 90 Days",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Opioid Dispense with Ambulatory Abuse Potential In Past 90 Days",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationDispense"
  }, {
    "name": "Has Opioid Dispense with Ambulatory Abuse Potential In Past 90 Days",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Opioid Naive?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "Patient"
    } ],
    "type": "Patient"
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "Condition"
    } ],
    "type": "Condition",
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/encounter-diagnosis-condition-category"
      }
    } ]
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "Condition"
    } ],
    "type": "Condition",
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/problem-list-condition-category"
      }
    } ]
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "Condition"
    } ],
    "type": "Condition",
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/us-core-health-concern-condition-category"
      }
    } ]
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "PractitionerRole"
    } ],
    "type": "PractitionerRole",
    "mustSupport": [ "specialty" ],
    "codeFilter": [ {
      "path": "specialty",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/oncology-specialty-designations"
      }
    } ]
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "Encounter"
    } ],
    "type": "Encounter",
    "mustSupport": [ "period.start", "period", "diagnosis", "type", "period.start.value", "participant" ],
    "codeFilter": [ {
      "path": "type",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/office-visit"
      }
    } ]
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "MedicationRequest"
    } ],
    "type": "MedicationRequest",
    "mustSupport": [ "recorder", "authoredOn", "dosageInstruction", "dispenseRequest", "subject", "medication.reference", "medication", "id", "category", "intent", "status" ],
    "codeFilter": [ {
      "path": "status",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/medicationrequest-status-active"
      }
    } ]
  }, {
    "extension": [ {
      "url": "http://hl7.org/fhir/tools/StructureDefinition/original-resource-name",
      "valueCode": "MedicationDispense"
    } ],
    "type": "MedicationDispense",
    "mustSupport": [ "whenHandedOver", "medication", "status" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSetReference": {
        "reference": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/opioid-analgesics-with-ambulatory-misuse-potential"
      }
    }, {
      "path": "status",
      "valueCoding": [ {
        "code": "completed"
      } ]
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}