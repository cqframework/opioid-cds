{
  "resourceType": "Library",
  "id": "library-OpioidCDSSTU3REC10",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-OpioidCDSSTU3REC10</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"2\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-FHIRHelpers-3.0.0</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-OpioidCDSSTU3Common-0.1.0</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"3\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Medication</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>Ambulatory Abuse Potential Opioids</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>Illicit Drug Screening</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>Opioid Drug Screening</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library OpioidCDSSTU3REC10 version '0.1.0'\n\nusing FHIR version '3.0.0'\n\ninclude FHIRHelpers version '3.0.0' called FHIRHelpers\ninclude OpioidCDSSTU3Common version '0.1.0' called Common\n\n/*\n** Recommendation #10\n** Consider urine drug testing before starting opioid therapy and consider urine\n** drug testing at least annually to assess for prescribed medications as well\n** as other controlled prescription drugs and illicit drugs\n*/\n\n/*\n  Trigger context:\n    Primary care/ambulatory care\n  Trigger event:\n    Prescription of opioid with ambulatory care abuse potential\n  Assumptions:\n    Count only ambulatory prescriptions\n  Inclusion criteria:\n    Opioid Rx for at least 80 of the past 90 days\n      AND\n        (No Urine Screening in last 12 months\n        OR Evidence of Opioids present\n        OR Evidence of Illicit drugs present)\n  Exclusion criteria (optional):\n    Meds indicating end of life\n    Conditions indicating end of life\n  Notification:\n    No Urine Screening in last 12 months - Patients on opioid therapy should have a urine drug test performed every 12 months.\n    Evidence of Opioids - Opioid x present in urine screening\n    Evidence of Illicit Drugs - Illicit drug x present in urine screening\n    Ref: CDC Recommendation #10.\n  EHR expectations:\n    Have availability to snooze for 3 months\n\n  Plan Definition:\n\thttp://build.fhir.org/ig/cqframework/opioid-cds/PlanDefinition-opioidcds-10.html\n*/\n\nparameter ContextPrescriptions List&lt;MedicationRequest&gt;\n\ncontext Patient\n\ndefine \"Lookback Year\":\n  Interval[Today() - 12 months - 1 days, Today() - 1 day]\n\ndefine \"Validate Trigger Event\":\n  exists (\n    ContextPrescriptions TriggerScript\n      where if TriggerScript.medication is FHIR.Reference\n        then exists (\n          [Medication: Common.\"Ambulatory Abuse Potential Opioids\"] OpioidMedication\n            where EndsWith(TriggerScript.medication.reference, OpioidMedication.id)\n        )\n        else TriggerScript.medication in Common.\"Ambulatory Abuse Potential Opioids\"\n      and (\n        FHIRHelpers.ToConcept(TriggerScript.category) ~ Common.\"Community\"\n          or (\n            Common.IgnoreOutpatientCategorySystem\n              and Common.ConceptCodeOnlyEquivalent(TriggerScript.category, Common.\"Community\")\n          )\n      )\n  )\n\ndefine \"Inclusion Criteria\":\n   AgeInYears() &gt;= 18\n    and \"Validate Trigger Event\"\n    and not \"Exclusion Criteria\"\n    and AnyTrue(Common.ProbableDaysInRange(Common.\"Active Ambulatory Opioid Rx\", 90, 80))\n    and\n      (\"No Urine Screening In Last 12 Months\"\n        or \"Has Evidence of Opioids\"\n        or \"Has Evidence of Illicit Drugs\")\n\ndefine \"Exclusion Criteria\":\n  Common.\"End of Life Assessment\"\n\ndefine \"Illicit Drug Urine Screenings in Last 12 Months\":\n  [Observation: \"code\" in Common.\"Illicit Drug Screening\"] IllicitDrugScreen\n    where date from IllicitDrugScreen.effective.value in day of \"Lookback Year\"\n      sort by effective.value\n\ndefine \"Opioid Drug Urine Screenings in Last 12 Months\":\n  [Observation: \"code\" in Common.\"Opioid Drug Screening\"] OpioidDrugScreen\n    where date from OpioidDrugScreen.effective.value in day of \"Lookback Year\"\n      sort by effective.value\n\ndefine \"Most Recent Illicit Drug Urine Screenings in Last 12 Months\":\n  Last( \"Illicit Drug Urine Screenings in Last 12 Months\" )\n\ndefine \"Most Recent Opioid Drug Urine Screenings in Last 12 Months\":\n  Last( \"Opioid Drug Urine Screenings in Last 12 Months\" )\n\ndefine \"No Urine Screening In Last 12 Months\":\n  \"Most Recent Illicit Drug Urine Screenings in Last 12 Months\" is null\n    and \"Most Recent Opioid Drug Urine Screenings in Last 12 Months\" is null\n\ndefine \"Positive Illicit Drug Screening Qualifying Codes\":\n  \"Most Recent Illicit Drug Urine Screenings in Last 12 Months\".code\n\ndefine \"Has Evidence of Illicit Drugs\":\n  \"Most Recent Illicit Drug Urine Screenings in Last 12 Months\" is not null\n\ndefine \"Positive Opioid Drug Screening Qualifying Codes\":\n  \"Most Recent Opioid Drug Urine Screenings in Last 12 Months\".code\n\ndefine \"Has Evidence of Opioids\":\n  \"Most Recent Opioid Drug Urine Screenings in Last 12 Months\" is not null\n\ndefine \"No Screening In Last 12 Months Indicator\":\n  if \"Inclusion Criteria\"\n    then 'warning'\n  else null\n\ndefine \"Evidence Opioids Indicator\":\n  if \"Inclusion Criteria\"\n    then 'warning'\n  else null\n\ndefine \"Evidence of Illicit Drugs Indicator\":\n  if \"Inclusion Criteria\"\n    then 'warning'\n  else null\n\ndefine \"No Screening In Last 12 Months Summary\":\n  if \"Inclusion Criteria\" and \"No Urine Screening In Last 12 Months\"\n    then 'Annual Urine Screening Check'\n  else null\n\ndefine \"Evidence of Opioids Summary\":\n  if \"Inclusion Criteria\" and \"Has Evidence of Opioids\"\n    then 'Opioids Found In Urine Screening'\n  else null\n\ndefine \"Evidence of Illicit Drugs Summary\":\n  if \"Inclusion Criteria\" and \"Has Evidence of Illicit Drugs\"\n    then 'Illicit Drugs Found In Urine Screening'\n  else null\n\ndefine \"No Screening In Last 12 Months Detail\":\n  if \"Inclusion Criteria\" and \"No Urine Screening In Last 12 Months\"\n    then 'Patients on opioid therapy should have a urine drug test performed every 12 months.'\n  else null\n\ndefine \"Evidence of Opioids Detail\":\n  if \"Inclusion Criteria\" and \"Has Evidence of Opioids\"\n    then\n      'Found the following opioid(s): ' +\n      Common.CodeableConceptToString(\"Positive Opioid Drug Screening Qualifying Codes\")\n  else null\n\ndefine \"Evidence of Illicit Drugs Detail\":\n  \"Positive Illicit Drug Screening Qualifying Codes\" positiveScreening\n    return\n      if (\"Inclusion Criteria\" and \"Has Evidence of Illicit Drugs\")\n        then\n          'Found the following illicit drug(s) in urine drug screen: ' +\n            Common.CodeableConceptToString(positiveScreening)\n        else null\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "name": "OpioidCDSSTU3REC10",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [
      {
        "system": "http://hl7.org/fhir/codesystem-library-type.html",
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-FHIRHelpers-3.0.0"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-OpioidCDSSTU3Common-0.1.0"
      }
    }
  ],
  "dataRequirement": [
    {
      "type": "Medication",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "Ambulatory Abuse Potential Opioids"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "Illicit Drug Screening"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "Opioid Drug Screening"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBPcGlvaWRDRFNTVFUzUkVDMTAgdmVyc2lvbiAnMC4xLjAnCgp1c2luZyBGSElSIHZlcnNpb24gJzMuMC4wJwoKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICczLjAuMCcgY2FsbGVkIEZISVJIZWxwZXJzCmluY2x1ZGUgT3Bpb2lkQ0RTU1RVM0NvbW1vbiB2ZXJzaW9uICcwLjEuMCcgY2FsbGVkIENvbW1vbgoKLyoKKiogUmVjb21tZW5kYXRpb24gIzEwCioqIENvbnNpZGVyIHVyaW5lIGRydWcgdGVzdGluZyBiZWZvcmUgc3RhcnRpbmcgb3Bpb2lkIHRoZXJhcHkgYW5kIGNvbnNpZGVyIHVyaW5lCioqIGRydWcgdGVzdGluZyBhdCBsZWFzdCBhbm51YWxseSB0byBhc3Nlc3MgZm9yIHByZXNjcmliZWQgbWVkaWNhdGlvbnMgYXMgd2VsbAoqKiBhcyBvdGhlciBjb250cm9sbGVkIHByZXNjcmlwdGlvbiBkcnVncyBhbmQgaWxsaWNpdCBkcnVncwoqLwoKLyoKICBUcmlnZ2VyIGNvbnRleHQ6CiAgICBQcmltYXJ5IGNhcmUvYW1idWxhdG9yeSBjYXJlCiAgVHJpZ2dlciBldmVudDoKICAgIFByZXNjcmlwdGlvbiBvZiBvcGlvaWQgd2l0aCBhbWJ1bGF0b3J5IGNhcmUgYWJ1c2UgcG90ZW50aWFsCiAgQXNzdW1wdGlvbnM6CiAgICBDb3VudCBvbmx5IGFtYnVsYXRvcnkgcHJlc2NyaXB0aW9ucwogIEluY2x1c2lvbiBjcml0ZXJpYToKICAgIE9waW9pZCBSeCBmb3IgYXQgbGVhc3QgODAgb2YgdGhlIHBhc3QgOTAgZGF5cwogICAgICBBTkQKICAgICAgICAoTm8gVXJpbmUgU2NyZWVuaW5nIGluIGxhc3QgMTIgbW9udGhzCiAgICAgICAgT1IgRXZpZGVuY2Ugb2YgT3Bpb2lkcyBwcmVzZW50CiAgICAgICAgT1IgRXZpZGVuY2Ugb2YgSWxsaWNpdCBkcnVncyBwcmVzZW50KQogIEV4Y2x1c2lvbiBjcml0ZXJpYSAob3B0aW9uYWwpOgogICAgTWVkcyBpbmRpY2F0aW5nIGVuZCBvZiBsaWZlCiAgICBDb25kaXRpb25zIGluZGljYXRpbmcgZW5kIG9mIGxpZmUKICBOb3RpZmljYXRpb246CiAgICBObyBVcmluZSBTY3JlZW5pbmcgaW4gbGFzdCAxMiBtb250aHMgLSBQYXRpZW50cyBvbiBvcGlvaWQgdGhlcmFweSBzaG91bGQgaGF2ZSBhIHVyaW5lIGRydWcgdGVzdCBwZXJmb3JtZWQgZXZlcnkgMTIgbW9udGhzLgogICAgRXZpZGVuY2Ugb2YgT3Bpb2lkcyAtIE9waW9pZCB4IHByZXNlbnQgaW4gdXJpbmUgc2NyZWVuaW5nCiAgICBFdmlkZW5jZSBvZiBJbGxpY2l0IERydWdzIC0gSWxsaWNpdCBkcnVnIHggcHJlc2VudCBpbiB1cmluZSBzY3JlZW5pbmcKICAgIFJlZjogQ0RDIFJlY29tbWVuZGF0aW9uICMxMC4KICBFSFIgZXhwZWN0YXRpb25zOgogICAgSGF2ZSBhdmFpbGFiaWxpdHkgdG8gc25vb3plIGZvciAzIG1vbnRocwoKICBQbGFuIERlZmluaXRpb246CglodHRwOi8vYnVpbGQuZmhpci5vcmcvaWcvY3FmcmFtZXdvcmsvb3Bpb2lkLWNkcy9QbGFuRGVmaW5pdGlvbi1vcGlvaWRjZHMtMTAuaHRtbAoqLwoKcGFyYW1ldGVyIENvbnRleHRQcmVzY3JpcHRpb25zIExpc3Q8TWVkaWNhdGlvblJlcXVlc3Q+Cgpjb250ZXh0IFBhdGllbnQKCmRlZmluZSAiTG9va2JhY2sgWWVhciI6CiAgSW50ZXJ2YWxbVG9kYXkoKSAtIDEyIG1vbnRocyAtIDEgZGF5cywgVG9kYXkoKSAtIDEgZGF5XQoKZGVmaW5lICJWYWxpZGF0ZSBUcmlnZ2VyIEV2ZW50IjoKICBleGlzdHMgKAogICAgQ29udGV4dFByZXNjcmlwdGlvbnMgVHJpZ2dlclNjcmlwdAogICAgICB3aGVyZSBpZiBUcmlnZ2VyU2NyaXB0Lm1lZGljYXRpb24gaXMgRkhJUi5SZWZlcmVuY2UKICAgICAgICB0aGVuIGV4aXN0cyAoCiAgICAgICAgICBbTWVkaWNhdGlvbjogQ29tbW9uLiJBbWJ1bGF0b3J5IEFidXNlIFBvdGVudGlhbCBPcGlvaWRzIl0gT3Bpb2lkTWVkaWNhdGlvbgogICAgICAgICAgICB3aGVyZSBFbmRzV2l0aChUcmlnZ2VyU2NyaXB0Lm1lZGljYXRpb24ucmVmZXJlbmNlLCBPcGlvaWRNZWRpY2F0aW9uLmlkKQogICAgICAgICkKICAgICAgICBlbHNlIFRyaWdnZXJTY3JpcHQubWVkaWNhdGlvbiBpbiBDb21tb24uIkFtYnVsYXRvcnkgQWJ1c2UgUG90ZW50aWFsIE9waW9pZHMiCiAgICAgIGFuZCAoCiAgICAgICAgRkhJUkhlbHBlcnMuVG9Db25jZXB0KFRyaWdnZXJTY3JpcHQuY2F0ZWdvcnkpIH4gQ29tbW9uLiJDb21tdW5pdHkiCiAgICAgICAgICBvciAoCiAgICAgICAgICAgIENvbW1vbi5JZ25vcmVPdXRwYXRpZW50Q2F0ZWdvcnlTeXN0ZW0KICAgICAgICAgICAgICBhbmQgQ29tbW9uLkNvbmNlcHRDb2RlT25seUVxdWl2YWxlbnQoVHJpZ2dlclNjcmlwdC5jYXRlZ29yeSwgQ29tbW9uLiJDb21tdW5pdHkiKQogICAgICAgICAgKQogICAgICApCiAgKQoKZGVmaW5lICJJbmNsdXNpb24gQ3JpdGVyaWEiOgogICBBZ2VJblllYXJzKCkgPj0gMTgKICAgIGFuZCAiVmFsaWRhdGUgVHJpZ2dlciBFdmVudCIKICAgIGFuZCBub3QgIkV4Y2x1c2lvbiBDcml0ZXJpYSIKICAgIGFuZCBBbnlUcnVlKENvbW1vbi5Qcm9iYWJsZURheXNJblJhbmdlKENvbW1vbi4iQWN0aXZlIEFtYnVsYXRvcnkgT3Bpb2lkIFJ4IiwgOTAsIDgwKSkKICAgIGFuZAogICAgICAoIk5vIFVyaW5lIFNjcmVlbmluZyBJbiBMYXN0IDEyIE1vbnRocyIKICAgICAgICBvciAiSGFzIEV2aWRlbmNlIG9mIE9waW9pZHMiCiAgICAgICAgb3IgIkhhcyBFdmlkZW5jZSBvZiBJbGxpY2l0IERydWdzIikKCmRlZmluZSAiRXhjbHVzaW9uIENyaXRlcmlhIjoKICBDb21tb24uIkVuZCBvZiBMaWZlIEFzc2Vzc21lbnQiCgpkZWZpbmUgIklsbGljaXQgRHJ1ZyBVcmluZSBTY3JlZW5pbmdzIGluIExhc3QgMTIgTW9udGhzIjoKICBbT2JzZXJ2YXRpb246ICJjb2RlIiBpbiBDb21tb24uIklsbGljaXQgRHJ1ZyBTY3JlZW5pbmciXSBJbGxpY2l0RHJ1Z1NjcmVlbgogICAgd2hlcmUgZGF0ZSBmcm9tIElsbGljaXREcnVnU2NyZWVuLmVmZmVjdGl2ZS52YWx1ZSBpbiBkYXkgb2YgIkxvb2tiYWNrIFllYXIiCiAgICAgIHNvcnQgYnkgZWZmZWN0aXZlLnZhbHVlCgpkZWZpbmUgIk9waW9pZCBEcnVnIFVyaW5lIFNjcmVlbmluZ3MgaW4gTGFzdCAxMiBNb250aHMiOgogIFtPYnNlcnZhdGlvbjogImNvZGUiIGluIENvbW1vbi4iT3Bpb2lkIERydWcgU2NyZWVuaW5nIl0gT3Bpb2lkRHJ1Z1NjcmVlbgogICAgd2hlcmUgZGF0ZSBmcm9tIE9waW9pZERydWdTY3JlZW4uZWZmZWN0aXZlLnZhbHVlIGluIGRheSBvZiAiTG9va2JhY2sgWWVhciIKICAgICAgc29ydCBieSBlZmZlY3RpdmUudmFsdWUKCmRlZmluZSAiTW9zdCBSZWNlbnQgSWxsaWNpdCBEcnVnIFVyaW5lIFNjcmVlbmluZ3MgaW4gTGFzdCAxMiBNb250aHMiOgogIExhc3QoICJJbGxpY2l0IERydWcgVXJpbmUgU2NyZWVuaW5ncyBpbiBMYXN0IDEyIE1vbnRocyIgKQoKZGVmaW5lICJNb3N0IFJlY2VudCBPcGlvaWQgRHJ1ZyBVcmluZSBTY3JlZW5pbmdzIGluIExhc3QgMTIgTW9udGhzIjoKICBMYXN0KCAiT3Bpb2lkIERydWcgVXJpbmUgU2NyZWVuaW5ncyBpbiBMYXN0IDEyIE1vbnRocyIgKQoKZGVmaW5lICJObyBVcmluZSBTY3JlZW5pbmcgSW4gTGFzdCAxMiBNb250aHMiOgogICJNb3N0IFJlY2VudCBJbGxpY2l0IERydWcgVXJpbmUgU2NyZWVuaW5ncyBpbiBMYXN0IDEyIE1vbnRocyIgaXMgbnVsbAogICAgYW5kICJNb3N0IFJlY2VudCBPcGlvaWQgRHJ1ZyBVcmluZSBTY3JlZW5pbmdzIGluIExhc3QgMTIgTW9udGhzIiBpcyBudWxsCgpkZWZpbmUgIlBvc2l0aXZlIElsbGljaXQgRHJ1ZyBTY3JlZW5pbmcgUXVhbGlmeWluZyBDb2RlcyI6CiAgIk1vc3QgUmVjZW50IElsbGljaXQgRHJ1ZyBVcmluZSBTY3JlZW5pbmdzIGluIExhc3QgMTIgTW9udGhzIi5jb2RlCgpkZWZpbmUgIkhhcyBFdmlkZW5jZSBvZiBJbGxpY2l0IERydWdzIjoKICAiTW9zdCBSZWNlbnQgSWxsaWNpdCBEcnVnIFVyaW5lIFNjcmVlbmluZ3MgaW4gTGFzdCAxMiBNb250aHMiIGlzIG5vdCBudWxsCgpkZWZpbmUgIlBvc2l0aXZlIE9waW9pZCBEcnVnIFNjcmVlbmluZyBRdWFsaWZ5aW5nIENvZGVzIjoKICAiTW9zdCBSZWNlbnQgT3Bpb2lkIERydWcgVXJpbmUgU2NyZWVuaW5ncyBpbiBMYXN0IDEyIE1vbnRocyIuY29kZQoKZGVmaW5lICJIYXMgRXZpZGVuY2Ugb2YgT3Bpb2lkcyI6CiAgIk1vc3QgUmVjZW50IE9waW9pZCBEcnVnIFVyaW5lIFNjcmVlbmluZ3MgaW4gTGFzdCAxMiBNb250aHMiIGlzIG5vdCBudWxsCgpkZWZpbmUgIk5vIFNjcmVlbmluZyBJbiBMYXN0IDEyIE1vbnRocyBJbmRpY2F0b3IiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiCiAgICB0aGVuICd3YXJuaW5nJwogIGVsc2UgbnVsbAoKZGVmaW5lICJFdmlkZW5jZSBPcGlvaWRzIEluZGljYXRvciI6CiAgaWYgIkluY2x1c2lvbiBDcml0ZXJpYSIKICAgIHRoZW4gJ3dhcm5pbmcnCiAgZWxzZSBudWxsCgpkZWZpbmUgIkV2aWRlbmNlIG9mIElsbGljaXQgRHJ1Z3MgSW5kaWNhdG9yIjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIgogICAgdGhlbiAnd2FybmluZycKICBlbHNlIG51bGwKCmRlZmluZSAiTm8gU2NyZWVuaW5nIEluIExhc3QgMTIgTW9udGhzIFN1bW1hcnkiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiIGFuZCAiTm8gVXJpbmUgU2NyZWVuaW5nIEluIExhc3QgMTIgTW9udGhzIgogICAgdGhlbiAnQW5udWFsIFVyaW5lIFNjcmVlbmluZyBDaGVjaycKICBlbHNlIG51bGwKCmRlZmluZSAiRXZpZGVuY2Ugb2YgT3Bpb2lkcyBTdW1tYXJ5IjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIiBhbmQgIkhhcyBFdmlkZW5jZSBvZiBPcGlvaWRzIgogICAgdGhlbiAnT3Bpb2lkcyBGb3VuZCBJbiBVcmluZSBTY3JlZW5pbmcnCiAgZWxzZSBudWxsCgpkZWZpbmUgIkV2aWRlbmNlIG9mIElsbGljaXQgRHJ1Z3MgU3VtbWFyeSI6CiAgaWYgIkluY2x1c2lvbiBDcml0ZXJpYSIgYW5kICJIYXMgRXZpZGVuY2Ugb2YgSWxsaWNpdCBEcnVncyIKICAgIHRoZW4gJ0lsbGljaXQgRHJ1Z3MgRm91bmQgSW4gVXJpbmUgU2NyZWVuaW5nJwogIGVsc2UgbnVsbAoKZGVmaW5lICJObyBTY3JlZW5pbmcgSW4gTGFzdCAxMiBNb250aHMgRGV0YWlsIjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIiBhbmQgIk5vIFVyaW5lIFNjcmVlbmluZyBJbiBMYXN0IDEyIE1vbnRocyIKICAgIHRoZW4gJ1BhdGllbnRzIG9uIG9waW9pZCB0aGVyYXB5IHNob3VsZCBoYXZlIGEgdXJpbmUgZHJ1ZyB0ZXN0IHBlcmZvcm1lZCBldmVyeSAxMiBtb250aHMuJwogIGVsc2UgbnVsbAoKZGVmaW5lICJFdmlkZW5jZSBvZiBPcGlvaWRzIERldGFpbCI6CiAgaWYgIkluY2x1c2lvbiBDcml0ZXJpYSIgYW5kICJIYXMgRXZpZGVuY2Ugb2YgT3Bpb2lkcyIKICAgIHRoZW4KICAgICAgJ0ZvdW5kIHRoZSBmb2xsb3dpbmcgb3Bpb2lkKHMpOiAnICsKICAgICAgQ29tbW9uLkNvZGVhYmxlQ29uY2VwdFRvU3RyaW5nKCJQb3NpdGl2ZSBPcGlvaWQgRHJ1ZyBTY3JlZW5pbmcgUXVhbGlmeWluZyBDb2RlcyIpCiAgZWxzZSBudWxsCgpkZWZpbmUgIkV2aWRlbmNlIG9mIElsbGljaXQgRHJ1Z3MgRGV0YWlsIjoKICAiUG9zaXRpdmUgSWxsaWNpdCBEcnVnIFNjcmVlbmluZyBRdWFsaWZ5aW5nIENvZGVzIiBwb3NpdGl2ZVNjcmVlbmluZwogICAgcmV0dXJuCiAgICAgIGlmICgiSW5jbHVzaW9uIENyaXRlcmlhIiBhbmQgIkhhcyBFdmlkZW5jZSBvZiBJbGxpY2l0IERydWdzIikKICAgICAgICB0aGVuCiAgICAgICAgICAnRm91bmQgdGhlIGZvbGxvd2luZyBpbGxpY2l0IGRydWcocykgaW4gdXJpbmUgZHJ1ZyBzY3JlZW46ICcgKwogICAgICAgICAgICBDb21tb24uQ29kZWFibGVDb25jZXB0VG9TdHJpbmcocG9zaXRpdmVTY3JlZW5pbmcpCiAgICAgICAgZWxzZSBudWxsCg=="
    }
  ]
}