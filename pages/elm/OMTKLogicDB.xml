<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="OMTKLogic" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="OMTK" uri="http://org.opencds/opioid-cds" version="0.1.0"/>
   </usings>
   <codeSystems>
      <def name="RxNorm" id="http://www.nlm.nih.gov/research/umls/rxnorm" accessLevel="Public"/>
   </codeSystems>
   <statements>
      <def name="ToUCUM" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand name="unit" xsi:type="OperandRef"/>
            <caseItem>
               <when valueType="t:String" value="MG" xsi:type="Literal"/>
               <then valueType="t:String" value="mg" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="MG/ACTUAT" xsi:type="Literal"/>
               <then valueType="t:String" value="mg/{actuat}" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="MG/HR" xsi:type="Literal"/>
               <then valueType="t:String" value="mg/h" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="MG/ML" xsi:type="Literal"/>
               <then valueType="t:String" value="mg/mL" xsi:type="Literal"/>
            </caseItem>
            <else xsi:type="Concatenate">
               <operand xsi:type="Concatenate">
                  <operand valueType="t:String" value="unknown{" xsi:type="Literal"/>
                  <operand name="unit" xsi:type="OperandRef"/>
               </operand>
               <operand valueType="t:String" value="}" xsi:type="Literal"/>
            </else>
         </expression>
         <operand name="unit">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="ToDaily" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand path="unit" xsi:type="Property">
               <source name="period" xsi:type="OperandRef"/>
            </comparand>
            <caseItem>
               <when valueType="t:String" value="h" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="Divide">
                     <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand path="value" xsi:type="Property">
                        <source name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="min" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="s" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand xsi:type="Divide">
                           <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand path="value" xsi:type="Property">
                              <source name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="d" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="wk" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="mo" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="a" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <else asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
         <operand name="frequency">
            <operandTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="period">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="IsPatch" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Equal">
            <operand xsi:type="ToInteger">
               <operand path="code" xsi:type="Property">
                  <source name="doseFormCode" xsi:type="OperandRef"/>
               </operand>
            </operand>
            <operand valueType="t:Integer" value="316987" xsi:type="Literal"/>
         </expression>
         <operand name="doseFormCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="GetConversionFactor" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand xsi:type="ToInteger">
               <operand path="code" xsi:type="Property">
                  <source name="ingredientCode" xsi:type="OperandRef"/>
               </operand>
            </comparand>
            <caseItem>
               <when valueType="t:Integer" value="161" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="1191" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="1223" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="1767" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="1819" xsi:type="Literal"/>
               <then xsi:type="Case">
                  <caseItem>
                     <when xsi:type="Equal">
                        <operand xsi:type="ToInteger">
                           <operand path="code" xsi:type="Property">
                              <source name="doseFormCode" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:Integer" value="316987" xsi:type="Literal"/>
                     </when>
                     <then valueType="t:Decimal" value="12.6" xsi:type="Literal"/>
                  </caseItem>
                  <else xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="30" xsi:type="Literal"/>
                  </else>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="1841" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="7" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="1886" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="2101" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="2354" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="2400" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="2670" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="0.15" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="3423" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="4" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="3498" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="4337" xsi:type="Literal"/>
               <then xsi:type="Case">
                  <caseItem>
                     <when xsi:type="In">
                        <operand xsi:type="ToInteger">
                           <operand path="code" xsi:type="Property">
                              <source name="doseFormCode" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand xsi:type="List">
                           <element valueType="t:Integer" value="970789" xsi:type="Literal"/>
                           <element valueType="t:Integer" value="317007" xsi:type="Literal"/>
                           <element valueType="t:Integer" value="316992" xsi:type="Literal"/>
                        </operand>
                     </when>
                     <then valueType="t:Decimal" value="0.13" xsi:type="Literal"/>
                  </caseItem>
                  <caseItem>
                     <when xsi:type="Equal">
                        <operand xsi:type="ToInteger">
                           <operand path="code" xsi:type="Property">
                              <source name="doseFormCode" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:Integer" value="346163" xsi:type="Literal"/>
                     </when>
                     <then valueType="t:Decimal" value="0.18" xsi:type="Literal"/>
                  </caseItem>
                  <caseItem>
                     <when xsi:type="In">
                        <operand xsi:type="ToInteger">
                           <operand path="code" xsi:type="Property">
                              <source name="doseFormCode" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand xsi:type="List">
                           <element valueType="t:Integer" value="126542" xsi:type="Literal"/>
                           <element valueType="t:Integer" value="346163" xsi:type="Literal"/>
                        </operand>
                     </when>
                     <then valueType="t:Decimal" value="0.16" xsi:type="Literal"/>
                  </caseItem>
                  <caseItem>
                     <when name="IsPatch" xsi:type="FunctionRef">
                        <operand name="doseFormCode" xsi:type="OperandRef"/>
                     </when>
                     <then valueType="t:Decimal" value="7.2" xsi:type="Literal"/>
                  </caseItem>
                  <else xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="1000" xsi:type="Literal"/>
                  </else>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="5032" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="5489" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="5640" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="6102" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="6378" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="11" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="6754" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="0.1" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="6813" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand xsi:type="Case">
                     <caseItem>
                        <when xsi:type="And">
                           <operand xsi:type="GreaterOrEqual">
                              <operand path="value" xsi:type="Property">
                                 <source name="dailyDose" xsi:type="OperandRef"/>
                              </operand>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand xsi:type="LessOrEqual">
                              <operand path="value" xsi:type="Property">
                                 <source name="dailyDose" xsi:type="OperandRef"/>
                              </operand>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="20" xsi:type="Literal"/>
                              </operand>
                           </operand>
                        </when>
                        <then valueType="t:Integer" value="4" xsi:type="Literal"/>
                     </caseItem>
                     <caseItem>
                        <when xsi:type="And">
                           <operand xsi:type="GreaterOrEqual">
                              <operand path="value" xsi:type="Property">
                                 <source name="dailyDose" xsi:type="OperandRef"/>
                              </operand>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="21" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand xsi:type="LessOrEqual">
                              <operand path="value" xsi:type="Property">
                                 <source name="dailyDose" xsi:type="OperandRef"/>
                              </operand>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="40" xsi:type="Literal"/>
                              </operand>
                           </operand>
                        </when>
                        <then valueType="t:Integer" value="8" xsi:type="Literal"/>
                     </caseItem>
                     <caseItem>
                        <when xsi:type="And">
                           <operand xsi:type="GreaterOrEqual">
                              <operand path="value" xsi:type="Property">
                                 <source name="dailyDose" xsi:type="OperandRef"/>
                              </operand>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="41" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand xsi:type="LessOrEqual">
                              <operand path="value" xsi:type="Property">
                                 <source name="dailyDose" xsi:type="OperandRef"/>
                              </operand>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                              </operand>
                           </operand>
                        </when>
                        <then valueType="t:Integer" value="10" xsi:type="Literal"/>
                     </caseItem>
                     <caseItem>
                        <when xsi:type="GreaterOrEqual">
                           <operand path="value" xsi:type="Property">
                              <source name="dailyDose" xsi:type="OperandRef"/>
                           </operand>
                           <operand xsi:type="ToDecimal">
                              <operand valueType="t:Integer" value="61" xsi:type="Literal"/>
                           </operand>
                        </when>
                        <then valueType="t:Integer" value="12" xsi:type="Literal"/>
                     </caseItem>
                     <else valueType="t:Integer" value="1000" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="7052" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="7242" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="7243" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="7804" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="1.5" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="7814" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="8001" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="0.37" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="8163" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="8175" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="8745" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="8896" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="9009" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="10689" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="0.1" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="10849" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="19759" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="19860" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="22696" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="22697" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="23088" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="0.25" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="27084" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="35780" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="237005" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="8" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="636827" xsi:type="Literal"/>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="787390" xsi:type="Literal"/>
               <then valueType="t:Decimal" value="0.4" xsi:type="Literal"/>
            </caseItem>
            <else xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </else>
         </expression>
         <operand name="ingredientCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="dailyDose">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="doseFormCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="EnsureMicrogramQuantity" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand xsi:type="Less">
                     <operand path="value" xsi:type="Property">
                        <source name="strength" xsi:type="OperandRef"/>
                     </operand>
                     <operand valueType="t:Decimal" value="0.1" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Equal">
                     <operand xsi:type="PositionOf">
                        <pattern valueType="t:String" value="mg" xsi:type="Literal"/>
                        <string path="unit" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </string>
                     </operand>
                     <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </operand>
               </operand>
            </condition>
            <then classType="t:Quantity" xsi:type="Instance">
               <element name="value">
                  <value xsi:type="Multiply">
                     <operand path="value" xsi:type="Property">
                        <source name="strength" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand valueType="t:Integer" value="1000" xsi:type="Literal"/>
                     </operand>
                  </value>
               </element>
               <element name="unit">
                  <value xsi:type="Concatenate">
                     <operand valueType="t:String" value="mcg" xsi:type="Literal"/>
                     <operand xsi:type="Substring">
                        <stringToSub path="unit" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </stringToSub>
                        <startIndex valueType="t:Integer" value="2" xsi:type="Literal"/>
                     </operand>
                  </value>
               </element>
            </then>
            <else name="strength" xsi:type="OperandRef"/>
         </expression>
         <operand name="strength">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="GetIngredients" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="C">
               <expression xsi:type="Query">
                  <source alias="SD">
                     <expression xmlns:ns0="http://org.opencds/opioid-cds" dataType="ns0:MED_SCDC_FOR_DRUG" codeProperty="DRUG_RXCUI" xsi:type="Retrieve">
                        <codes xsi:type="ToList">
                           <operand name="rxNormCode" xsi:type="OperandRef"/>
                        </codes>
                     </expression>
                  </source>
                  <where xsi:type="Exists">
                     <operand xmlns:ns1="http://org.opencds/opioid-cds" dataType="ns1:MED_DRUG_VALUE_SET" codeProperty="DRUG_RXCUI" xsi:type="Retrieve">
                        <codes xsi:type="ToList">
                           <operand path="DRUG_RXCUI" scope="SD" xsi:type="Property"/>
                        </codes>
                     </operand>
                  </where>
                  <return>
                     <expression xsi:type="Tuple">
                        <element name="rxNormCode">
                           <value name="rxNormCode" xsi:type="OperandRef"/>
                        </element>
                        <element name="component">
                           <value xsi:type="SingletonFrom">
                              <operand xmlns:ns2="http://org.opencds/opioid-cds" dataType="ns2:MED_SCDC" codeProperty="SCDC_RXCUI" xsi:type="Retrieve">
                                 <codes xsi:type="ToList">
                                    <operand path="SCDC_RXCUI" scope="SD" xsi:type="Property"/>
                                 </codes>
                              </operand>
                           </value>
                        </element>
                        <element name="ingredientCode">
                           <value path="INGREDIENT_RXCUI" xsi:type="Property">
                              <source xsi:type="SingletonFrom">
                                 <operand xmlns:ns3="http://org.opencds/opioid-cds" dataType="ns3:MED_SCDC" codeProperty="SCDC_RXCUI" xsi:type="Retrieve">
                                    <codes xsi:type="ToList">
                                       <operand path="SCDC_RXCUI" scope="SD" xsi:type="Property"/>
                                    </codes>
                                 </operand>
                              </source>
                           </value>
                        </element>
                        <element name="doseFormCode">
                           <value path="DOSE_FORM_RXCUI" xsi:type="Property">
                              <source xsi:type="SingletonFrom">
                                 <operand xmlns:ns4="http://org.opencds/opioid-cds" dataType="ns4:MED_DRUG" codeProperty="DRUG_RXCUI" xsi:type="Retrieve">
                                    <codes xsi:type="ToList">
                                       <operand path="DRUG_RXCUI" scope="SD" xsi:type="Property"/>
                                    </codes>
                                 </operand>
                              </source>
                           </value>
                        </element>
                     </expression>
                  </return>
               </expression>
            </source>
            <let identifier="ingredient">
               <expression xsi:type="SingletonFrom">
                  <operand xmlns:ns5="http://org.opencds/opioid-cds" dataType="ns5:MED_INGREDIENT" codeProperty="INGREDIENT_RXCUI" xsi:type="Retrieve">
                     <codes xsi:type="ToList">
                        <operand path="ingredientCode" scope="C" xsi:type="Property"/>
                     </codes>
                  </operand>
               </expression>
            </let>
            <let identifier="doseForm">
               <expression xsi:type="SingletonFrom">
                  <operand xmlns:ns6="http://org.opencds/opioid-cds" dataType="ns6:MED_DOSE_FORM" codeProperty="DOSE_FORM_RXCUI" xsi:type="Retrieve">
                     <codes xsi:type="ToList">
                        <operand path="doseFormCode" scope="C" xsi:type="Property"/>
                     </codes>
                  </operand>
               </expression>
            </let>
            <where xsi:type="Exists">
               <operand xsi:type="Query">
                  <source alias="IT">
                     <expression xmlns:ns7="http://org.opencds/opioid-cds" dataType="ns7:MED_INGREDIENT_TYPE" codeProperty="INGREDIENT_RXCUI" xsi:type="Retrieve">
                        <codes xsi:type="ToList">
                           <operand path="ingredientCode" scope="C" xsi:type="Property"/>
                        </codes>
                     </expression>
                  </source>
                  <where xsi:type="Equal">
                     <operand path="INGREDIENT_TYPE" scope="IT" xsi:type="Property"/>
                     <operand valueType="t:String" value="Opioid_NonSurgical" xsi:type="Literal"/>
                  </where>
               </operand>
            </where>
            <return>
               <expression xsi:type="Tuple">
                  <element name="rxNormCode">
                     <value name="rxNormCode" xsi:type="OperandRef"/>
                  </element>
                  <element name="doseFormCode">
                     <value path="doseFormCode" scope="C" xsi:type="Property"/>
                  </element>
                  <element name="doseFormName">
                     <value path="DOSE_FORM_NAME" xsi:type="Property">
                        <source name="doseForm" xsi:type="QueryLetRef"/>
                     </value>
                  </element>
                  <element name="ingredientCode">
                     <value path="ingredientCode" scope="C" xsi:type="Property"/>
                  </element>
                  <element name="ingredientName">
                     <value path="INGREDIENT_NAME" xsi:type="Property">
                        <source name="ingredient" xsi:type="QueryLetRef"/>
                     </value>
                  </element>
                  <element name="strength">
                     <value name="EnsureMicrogramQuantity" xsi:type="FunctionRef">
                        <operand classType="t:Quantity" xsi:type="Instance">
                           <element name="value">
                              <value path="STRENGTH_VALUE" xsi:type="Property">
                                 <source path="component" scope="C" xsi:type="Property"/>
                              </value>
                           </element>
                           <element name="unit">
                              <value name="ToUCUM" xsi:type="FunctionRef">
                                 <operand path="STRENGTH_UNIT" xsi:type="Property">
                                    <source path="component" scope="C" xsi:type="Property"/>
                                 </operand>
                              </value>
                           </element>
                        </operand>
                     </value>
                  </element>
               </expression>
            </return>
         </expression>
         <operand name="rxNormCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="GetDailyDose" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <caseItem>
               <when name="IsPatch" xsi:type="FunctionRef">
                  <operand name="doseFormCode" xsi:type="OperandRef"/>
               </when>
               <then xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand xsi:type="In">
                        <operand xsi:type="ToInteger">
                           <operand path="code" xsi:type="Property">
                              <source name="ingredientCode" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand xsi:type="List">
                           <element valueType="t:Integer" value="1819" xsi:type="Literal"/>
                           <element valueType="t:Integer" value="4337" xsi:type="Literal"/>
                        </operand>
                     </operand>
                  </condition>
                  <then classType="t:Quantity" xsi:type="Instance">
                     <element name="value">
                        <value xsi:type="Multiply">
                           <operand xsi:type="Multiply">
                              <operand name="dosesPerDay" xsi:type="OperandRef"/>
                              <operand path="value" xsi:type="Property">
                                 <source name="doseQuantity" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                           <operand path="value" xsi:type="Property">
                              <source name="strength" xsi:type="OperandRef"/>
                           </operand>
                        </value>
                     </element>
                     <element name="unit">
                        <value path="unit" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </value>
                     </element>
                  </then>
                  <else asType="t:Quantity" xsi:type="As">
                     <operand xsi:type="Null"/>
                  </else>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="In">
                  <operand path="unit" xsi:type="Property">
                     <source name="doseQuantity" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="List">
                     <element valueType="t:String" value="mg" xsi:type="Literal"/>
                     <element valueType="t:String" value="mcg" xsi:type="Literal"/>
                  </operand>
               </when>
               <then classType="t:Quantity" xsi:type="Instance">
                  <element name="value">
                     <value xsi:type="Multiply">
                        <operand name="dosesPerDay" xsi:type="OperandRef"/>
                        <operand path="value" xsi:type="Property">
                           <source name="doseQuantity" xsi:type="OperandRef"/>
                        </operand>
                     </value>
                  </element>
                  <element name="unit">
                     <value path="unit" xsi:type="Property">
                        <source name="doseQuantity" xsi:type="OperandRef"/>
                     </value>
                  </element>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="unit" xsi:type="Property">
                        <source name="doseQuantity" xsi:type="OperandRef"/>
                     </operand>
                     <operand valueType="t:String" value="mL" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Equal">
                     <operand xsi:type="PositionOf">
                        <pattern valueType="t:String" value="/mL" xsi:type="Literal"/>
                        <string path="unit" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </string>
                     </operand>
                     <operand xsi:type="Subtract">
                        <operand xsi:type="Length">
                           <operand path="unit" xsi:type="Property">
                              <source name="strength" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </when>
               <then classType="t:Quantity" xsi:type="Instance">
                  <element name="value">
                     <value xsi:type="Multiply">
                        <operand xsi:type="Multiply">
                           <operand name="dosesPerDay" xsi:type="OperandRef"/>
                           <operand path="value" xsi:type="Property">
                              <source name="doseQuantity" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand path="value" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </operand>
                     </value>
                  </element>
                  <element name="unit">
                     <value xsi:type="Substring">
                        <stringToSub path="unit" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </stringToSub>
                        <startIndex valueType="t:Integer" value="0" xsi:type="Literal"/>
                        <length xsi:type="PositionOf">
                           <pattern valueType="t:String" value="/" xsi:type="Literal"/>
                           <string path="unit" xsi:type="Property">
                              <source name="strength" xsi:type="OperandRef"/>
                           </string>
                        </length>
                     </value>
                  </element>
               </then>
            </caseItem>
            <else classType="t:Quantity" xsi:type="Instance">
               <element name="value">
                  <value xsi:type="Multiply">
                     <operand xsi:type="Multiply">
                        <operand name="dosesPerDay" xsi:type="OperandRef"/>
                        <operand path="value" xsi:type="Property">
                           <source name="doseQuantity" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                     <operand path="value" xsi:type="Property">
                        <source name="strength" xsi:type="OperandRef"/>
                     </operand>
                  </value>
               </element>
               <element name="unit">
                  <value xsi:type="Substring">
                     <stringToSub path="unit" xsi:type="Property">
                        <source name="strength" xsi:type="OperandRef"/>
                     </stringToSub>
                     <startIndex valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <length xsi:type="PositionOf">
                        <pattern valueType="t:String" value="/" xsi:type="Literal"/>
                        <string path="unit" xsi:type="Property">
                           <source name="strength" xsi:type="OperandRef"/>
                        </string>
                     </length>
                  </value>
               </element>
            </else>
         </expression>
         <operand name="ingredientCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="strength">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="doseFormCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="doseQuantity">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="dosesPerDay">
            <operandTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="GetMedicationName" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression path="DRUG_NAME" xsi:type="Property">
            <source xsi:type="SingletonFrom">
               <operand xmlns:ns8="http://org.opencds/opioid-cds" dataType="ns8:MED_DRUG" codeProperty="DRUG_RXCUI" xsi:type="Retrieve">
                  <codes xsi:type="ToList">
                     <operand name="rxNormCode" xsi:type="OperandRef"/>
                  </codes>
               </operand>
            </source>
         </expression>
         <operand name="rxNormCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="GetDailyDoseDescription" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <caseItem>
               <when name="IsPatch" xsi:type="FunctionRef">
                  <operand name="doseFormCode" xsi:type="OperandRef"/>
               </when>
               <then xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand xsi:type="In">
                        <operand xsi:type="ToInteger">
                           <operand path="code" xsi:type="Property">
                              <source name="ingredientCode" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand xsi:type="List">
                           <element valueType="t:Integer" value="1819" xsi:type="Literal"/>
                           <element valueType="t:Integer" value="4337" xsi:type="Literal"/>
                        </operand>
                     </operand>
                  </condition>
                  <then xsi:type="Concatenate">
                     <operand xsi:type="Concatenate">
                        <operand xsi:type="Concatenate">
                           <operand xsi:type="Concatenate">
                              <operand xsi:type="Concatenate">
                                 <operand xsi:type="Concatenate">
                                    <operand name="ingredientName" xsi:type="OperandRef"/>
                                    <operand valueType="t:String" value=" patch: " xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="ToString">
                                    <operand path="value" xsi:type="Property">
                                       <source name="doseQuantity" xsi:type="OperandRef"/>
                                    </operand>
                                 </operand>
                              </operand>
                              <operand valueType="t:String" value=" * " xsi:type="Literal"/>
                           </operand>
                           <operand xsi:type="ToString">
                              <operand name="strength" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:String" value=" = " xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="ToString">
                        <operand name="dailyDose" xsi:type="OperandRef"/>
                     </operand>
                  </then>
                  <else asType="t:String" xsi:type="As">
                     <operand xsi:type="Null"/>
                  </else>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="In">
                  <operand path="unit" xsi:type="Property">
                     <source name="doseQuantity" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="List">
                     <element valueType="t:String" value="mg" xsi:type="Literal"/>
                     <element valueType="t:String" value="mcg" xsi:type="Literal"/>
                  </operand>
               </when>
               <then xsi:type="Concatenate">
                  <operand xsi:type="Concatenate">
                     <operand xsi:type="Concatenate">
                        <operand xsi:type="Concatenate">
                           <operand xsi:type="Concatenate">
                              <operand xsi:type="Concatenate">
                                 <operand xsi:type="Concatenate">
                                    <operand xsi:type="Concatenate">
                                       <operand name="ingredientName" xsi:type="OperandRef"/>
                                       <operand valueType="t:String" value=" " xsi:type="Literal"/>
                                    </operand>
                                    <operand name="doseFormName" xsi:type="OperandRef"/>
                                 </operand>
                                 <operand valueType="t:String" value=": " xsi:type="Literal"/>
                              </operand>
                              <operand xsi:type="ToString">
                                 <operand name="dosesPerDay" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                           <operand valueType="t:String" value="/d * " xsi:type="Literal"/>
                        </operand>
                        <operand xsi:type="ToString">
                           <operand name="doseQuantity" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                     <operand valueType="t:String" value=" = " xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="ToString">
                     <operand name="dailyDose" xsi:type="OperandRef"/>
                  </operand>
               </then>
            </caseItem>
            <else xsi:type="Concatenate">
               <operand xsi:type="Concatenate">
                  <operand xsi:type="Concatenate">
                     <operand xsi:type="Concatenate">
                        <operand xsi:type="Concatenate">
                           <operand xsi:type="Concatenate">
                              <operand xsi:type="Concatenate">
                                 <operand xsi:type="Concatenate">
                                    <operand xsi:type="Concatenate">
                                       <operand xsi:type="Concatenate">
                                          <operand name="ingredientName" xsi:type="OperandRef"/>
                                          <operand valueType="t:String" value=" " xsi:type="Literal"/>
                                       </operand>
                                       <operand name="doseFormName" xsi:type="OperandRef"/>
                                    </operand>
                                    <operand valueType="t:String" value=": " xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="ToString">
                                    <operand name="dosesPerDay" xsi:type="OperandRef"/>
                                 </operand>
                              </operand>
                              <operand valueType="t:String" value="/d * " xsi:type="Literal"/>
                           </operand>
                           <operand xsi:type="ToString">
                              <operand name="doseQuantity" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:String" value=" * " xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="ToString">
                        <operand name="strength" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
                  <operand valueType="t:String" value=" = " xsi:type="Literal"/>
               </operand>
               <operand xsi:type="ToString">
                  <operand name="dailyDose" xsi:type="OperandRef"/>
               </operand>
            </else>
         </expression>
         <operand name="ingredientCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="ingredientName">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="strength">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="doseFormCode">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="doseFormName">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="doseQuantity">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="dosesPerDay">
            <operandTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="dailyDose">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="CalculateMMEs" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Flatten">
            <operand xsi:type="Query">
               <source alias="M">
                  <expression name="medications" xsi:type="OperandRef"/>
               </source>
               <let identifier="Ingredients">
                  <expression name="GetIngredients" xsi:type="FunctionRef">
                     <operand path="rxNormCode" scope="M" xsi:type="Property"/>
                  </expression>
               </let>
               <return>
                  <expression xsi:type="Query">
                     <source alias="I">
                        <expression name="Ingredients" xsi:type="QueryLetRef"/>
                     </source>
                     <let identifier="adjustedDoseQuantity">
                        <expression name="EnsureMicrogramQuantity" xsi:type="FunctionRef">
                           <operand path="doseQuantity" scope="M" xsi:type="Property"/>
                        </expression>
                     </let>
                     <let identifier="dailyDose">
                        <expression name="GetDailyDose" xsi:type="FunctionRef">
                           <operand path="ingredientCode" scope="I" xsi:type="Property"/>
                           <operand path="strength" scope="I" xsi:type="Property"/>
                           <operand path="doseFormCode" scope="I" xsi:type="Property"/>
                           <operand name="adjustedDoseQuantity" xsi:type="QueryLetRef"/>
                           <operand path="dosesPerDay" scope="M" xsi:type="Property"/>
                        </expression>
                     </let>
                     <let identifier="factor">
                        <expression name="GetConversionFactor" xsi:type="FunctionRef">
                           <operand path="ingredientCode" scope="I" xsi:type="Property"/>
                           <operand name="dailyDose" xsi:type="QueryLetRef"/>
                           <operand path="doseFormCode" scope="I" xsi:type="Property"/>
                        </expression>
                     </let>
                     <return>
                        <expression xsi:type="Tuple">
                           <element name="rxNormCode">
                              <value path="rxNormCode" scope="M" xsi:type="Property"/>
                           </element>
                           <element name="doseFormCode">
                              <value path="doseFormCode" scope="I" xsi:type="Property"/>
                           </element>
                           <element name="doseQuantity">
                              <value name="adjustedDoseQuantity" xsi:type="QueryLetRef"/>
                           </element>
                           <element name="dosesPerDay">
                              <value path="dosesPerDay" scope="M" xsi:type="Property"/>
                           </element>
                           <element name="ingredientCode">
                              <value path="ingredientCode" scope="I" xsi:type="Property"/>
                           </element>
                           <element name="ingredientName">
                              <value path="ingredientName" scope="I" xsi:type="Property"/>
                           </element>
                           <element name="strength">
                              <value path="strength" scope="I" xsi:type="Property"/>
                           </element>
                           <element name="dailyDose">
                              <value name="dailyDose" xsi:type="QueryLetRef"/>
                           </element>
                           <element name="dailyDoseDescription">
                              <value name="GetDailyDoseDescription" xsi:type="FunctionRef">
                                 <operand path="ingredientCode" scope="I" xsi:type="Property"/>
                                 <operand path="ingredientName" scope="I" xsi:type="Property"/>
                                 <operand path="strength" scope="I" xsi:type="Property"/>
                                 <operand path="doseFormCode" scope="I" xsi:type="Property"/>
                                 <operand path="doseFormName" scope="I" xsi:type="Property"/>
                                 <operand name="adjustedDoseQuantity" xsi:type="QueryLetRef"/>
                                 <operand path="dosesPerDay" scope="M" xsi:type="Property"/>
                                 <operand name="dailyDose" xsi:type="QueryLetRef"/>
                              </value>
                           </element>
                           <element name="conversionFactor">
                              <value name="factor" xsi:type="QueryLetRef"/>
                           </element>
                           <element name="mme">
                              <value classType="t:Quantity" xsi:type="Instance">
                                 <element name="value">
                                    <value xsi:type="Multiply">
                                       <operand path="value" xsi:type="Property">
                                          <source name="dailyDose" xsi:type="QueryLetRef"/>
                                       </operand>
                                       <operand name="factor" xsi:type="QueryLetRef"/>
                                    </value>
                                 </element>
                                 <element name="unit">
                                    <value xsi:type="Concatenate">
                                       <operand path="unit" xsi:type="Property">
                                          <source name="dailyDose" xsi:type="QueryLetRef"/>
                                       </operand>
                                       <operand valueType="t:String" value="/d" xsi:type="Literal"/>
                                    </value>
                                 </element>
                              </value>
                           </element>
                        </expression>
                     </return>
                  </expression>
               </return>
            </operand>
         </expression>
         <operand name="medications">
            <operandTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType xsi:type="TupleTypeSpecifier">
                  <element name="rxNormCode">
                     <type name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element name="doseQuantity">
                     <type name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element name="dosesPerDay">
                     <type name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
                  </element>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="TestCalculateMMEs" context="Patient" accessLevel="Public">
         <expression name="CalculateMMEs" xsi:type="FunctionRef">
            <operand xsi:type="List">
               <element xsi:type="Tuple">
                  <element name="rxNormCode">
                     <value code="388508" xsi:type="Code">
                        <system name="RxNorm"/>
                     </value>
                  </element>
                  <element name="doseQuantity">
                     <value classType="t:Quantity" xsi:type="Instance">
                        <element name="value">
                           <value xsi:type="ToDecimal">
                              <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                           </value>
                        </element>
                        <element name="unit">
                           <value valueType="t:String" value="patch" xsi:type="Literal"/>
                        </element>
                     </value>
                  </element>
                  <element name="dosesPerDay">
                     <value valueType="t:Decimal" value="0.33" xsi:type="Literal"/>
                  </element>
               </element>
            </operand>
         </expression>
      </def>
   </statements>
</library>

