<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation startLine="67" startChar="13" endLine="67" endChar="78" message="Could not resolve code path component-code for the type of the retrieve FHIR.Observation." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="67" startChar="13" endLine="67" endChar="78" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="75" startChar="13" endLine="75" endChar="77" message="Could not resolve code path component-code for the type of the retrieve FHIR.Observation." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="75" startChar="13" endLine="75" endChar="77" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="113" startChar="25" endLine="113" endChar="95" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="140" startChar="20" endLine="140" endChar="95" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="118" startChar="13" endLine="118" endChar="75" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="121" startChar="65" endLine="121" endChar="111" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="213" startChar="18" endLine="213" endChar="29" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <identifier id="OpioidCDS_DSTU2_REC_10" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="1.0.2"/>
   </usings>
   <includes>
      <def localIdentifier="FHIRHelpers" path="FHIRHelpers" version="1.0.2"/>
      <def localIdentifier="Common" path="OpioidCDSCommonDSTU2" version="0.1.0"/>
   </includes>
   <parameters>
      <def name="ContextPrescriptions" accessLevel="Public">
         <parameterTypeSpecifier xsi:type="ListTypeSpecifier">
            <elementType name="fhir:MedicationOrder" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <codeSystems>
      <def name="V2 Interpretation Codes" id="http://hl7.org/fhir/v2/0078" accessLevel="Public"/>
   </codeSystems>
   <codes>
      <def name="Positive" id="POS" accessLevel="Public">
         <codeSystem name="V2 Interpretation Codes"/>
      </def>
   </codes>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def name="Lookback Year" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Subtract">
                  <operand xsi:type="Today"/>
                  <operand value="12" unit="months" xsi:type="Quantity"/>
               </operand>
               <operand value="1" unit="days" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Today"/>
               <operand value="1" unit="day" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Patient on Opioids with Abuse Potential" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="ActiveOpioidScript">
                  <expression name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
               </source>
               <where xsi:type="Not">
                  <operand name="Is Context Prescription End of Life Opioid?" libraryName="Common" xsi:type="FunctionRef">
                     <operand xsi:type="ToList">
                        <operand name="ActiveOpioidScript" xsi:type="AliasRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Illicit Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="observation">
               <expression xsi:type="Union">
                  <operand dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Illicit Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                  </operand>
                  <operand dataType="fhir:Observation" codeProperty="component-code" xsi:type="Retrieve">
                     <codes name="Illicit Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                  </operand>
               </expression>
            </source>
            <where precision="Day" xsi:type="In">
               <operand xsi:type="DateFrom">
                  <operand path="value" xsi:type="Property">
                     <source path="effectiveDateTime" scope="observation" xsi:type="Property"/>
                  </operand>
               </operand>
               <operand name="Lookback Year" xsi:type="ExpressionRef"/>
            </where>
            <sort>
               <by direction="asc" xsi:type="ByExpression">
                  <expression path="value" xsi:type="Property">
                     <source name="effectiveDateTime" xsi:type="IdentifierRef"/>
                  </expression>
               </by>
            </sort>
         </expression>
      </def>
      <def name="Most Recent Illicit Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <expression xsi:type="Last">
            <source name="Illicit Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Opioid Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="observation">
               <expression xsi:type="Union">
                  <operand dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Opioid Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                  </operand>
                  <operand dataType="fhir:Observation" codeProperty="component-code" xsi:type="Retrieve">
                     <codes name="Opioid Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                  </operand>
               </expression>
            </source>
            <where precision="Day" xsi:type="In">
               <operand xsi:type="DateFrom">
                  <operand path="value" xsi:type="Property">
                     <source path="effectiveDateTime" scope="observation" xsi:type="Property"/>
                  </operand>
               </operand>
               <operand name="Lookback Year" xsi:type="ExpressionRef"/>
            </where>
            <sort>
               <by direction="asc" xsi:type="ByExpression">
                  <expression path="value" xsi:type="Property">
                     <source name="effectiveDateTime" xsi:type="IdentifierRef"/>
                  </expression>
               </by>
            </sort>
         </expression>
      </def>
      <def name="Most Recent Opioid Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <expression xsi:type="Last">
            <source name="Opioid Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="No Urine Screening In Last 12 Months" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="IsNull">
               <operand name="Most Recent Illicit Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </operand>
            <operand xsi:type="IsNull">
               <operand name="Most Recent Opioid Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="Positive Opioid Drug Screening" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="mostRecentScreening">
               <expression name="Most Recent Opioid Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </source>
            <where xsi:type="Contains">
               <operand name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                  <operand path="coding" xsi:type="Property">
                     <source path="interpretation" scope="mostRecentScreening" xsi:type="Property"/>
                  </operand>
               </operand>
               <operand name="Positive" xsi:type="CodeRef"/>
            </where>
         </expression>
      </def>
      <def name="Orders Before Most Recent Opioid Screening" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="orders">
               <expression name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
            </source>
            <relationship alias="mostRecentScreening" xsi:type="With">
               <expression name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
               <suchThat xsi:type="Less">
                  <operand path="value" xsi:type="Property">
                     <source path="dateWritten" scope="orders" xsi:type="Property"/>
                  </operand>
                  <operand path="value" xsi:type="Property">
                     <source path="effectiveDateTime" scope="mostRecentScreening" xsi:type="Property"/>
                  </operand>
               </suchThat>
            </relationship>
            <return>
               <expression name="orders" xsi:type="AliasRef"/>
            </return>
         </expression>
      </def>
      <def name="Prescribed Opioids" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="orders">
               <expression name="Orders Before Most Recent Opioid Screening" xsi:type="ExpressionRef"/>
            </source>
            <return>
               <expression xsi:type="Lower">
                  <operand xsi:type="SingletonFrom">
                     <operand xsi:type="SingletonFrom">
                        <operand name="GetIngredients" libraryName="Common" xsi:type="FunctionRef">
                           <operand name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                              <operand path="coding" xsi:type="Property">
                                 <source path="medicationCodeableConcept" scope="orders" xsi:type="Property"/>
                              </operand>
                           </operand>
                        </operand>
                     </operand>
                  </operand>
               </expression>
            </return>
         </expression>
      </def>
      <def name="GetDrugNameFromScreeningCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="IsNull">
                  <operand name="value" xsi:type="OperandRef"/>
               </operand>
            </condition>
            <then asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </then>
            <else xsi:type="If">
               <condition asType="t:Boolean" xsi:type="As">
                  <operand xsi:type="Equal">
                     <operand xsi:type="PositionOf">
                        <pattern valueType="t:String" value="[" xsi:type="Literal"/>
                        <string name="value" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Negate">
                        <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </condition>
               <then xsi:type="ReplaceMatches">
                  <operand xsi:type="Indexer">
                     <operand xsi:type="Split">
                        <stringToSplit xsi:type="ReplaceMatches">
                           <operand xsi:type="Indexer">
                              <operand xsi:type="Split">
                                 <stringToSplit name="value" xsi:type="OperandRef"/>
                                 <separator valueType="t:String" value="cutoff" xsi:type="Literal"/>
                              </operand>
                              <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                           <operand valueType="t:String" value="\s" xsi:type="Literal"/>
                           <operand valueType="t:String" value="" xsi:type="Literal"/>
                        </stringToSplit>
                        <separator valueType="t:String" value="tested" xsi:type="Literal"/>
                     </operand>
                     <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </operand>
                  <operand valueType="t:String" value="\s" xsi:type="Literal"/>
                  <operand valueType="t:String" value="" xsi:type="Literal"/>
               </then>
               <else xsi:type="ReplaceMatches">
                  <operand xsi:type="Indexer">
                     <operand xsi:type="Split">
                        <stringToSplit name="value" xsi:type="OperandRef"/>
                        <separator valueType="t:String" value="\[" xsi:type="Literal"/>
                     </operand>
                     <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </operand>
                  <operand valueType="t:String" value="\s" xsi:type="Literal"/>
                  <operand valueType="t:String" value="" xsi:type="Literal"/>
               </else>
            </else>
         </expression>
         <operand name="value">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="GetDrugNamesFromScreeningCodes" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="v">
               <expression name="value" xsi:type="OperandRef"/>
            </source>
            <return>
               <expression name="GetDrugNameFromScreeningCode" xsi:type="FunctionRef">
                  <operand path="value" xsi:type="Property">
                     <source path="display" scope="v" xsi:type="Property"/>
                  </operand>
               </expression>
            </return>
         </expression>
         <operand name="value">
            <operandTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Missing Opioids" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="Not">
                  <operand xsi:type="IsNull">
                     <operand name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
            </condition>
            <then xsi:type="Except">
               <operand xsi:type="Query">
                  <source alias="Prescriptions">
                     <expression name="Prescribed Opioids" xsi:type="ExpressionRef"/>
                  </source>
               </operand>
               <operand xsi:type="ToList">
                  <operand xsi:type="Lower">
                     <operand xsi:type="SingletonFrom">
                        <operand name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                           <operand path="coding" xsi:type="Property">
                              <source path="code" xsi:type="Property">
                                 <source name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                              </source>
                           </operand>
                        </operand>
                     </operand>
                  </operand>
               </operand>
            </then>
            <else xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </else>
         </expression>
      </def>
      <def name="Has Missing Opioids?" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand name="Missing Opioids" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Opioids From Most Recent Screening" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="mostRecentScreening">
               <expression name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
            </source>
            <return>
               <expression xsi:type="Union">
                  <operand xsi:type="ToList">
                     <operand xsi:type="Lower">
                        <operand xsi:type="SingletonFrom">
                           <operand name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                              <operand path="coding" xsi:type="Property">
                                 <source path="code" scope="mostRecentScreening" xsi:type="Property"/>
                              </operand>
                           </operand>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="Query">
                     <source alias="X">
                        <expression xsi:type="If">
                           <condition asType="t:Boolean" xsi:type="As">
                              <operand xsi:type="And">
                                 <operand xsi:type="Not">
                                    <operand xsi:type="IsNull">
                                       <operand path="component" scope="mostRecentScreening" xsi:type="Property"/>
                                    </operand>
                                 </operand>
                                 <operand xsi:type="Exists">
                                    <operand path="component" scope="mostRecentScreening" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </condition>
                           <then xsi:type="Query">
                              <source alias="pis">
                                 <expression path="component" scope="mostRecentScreening" xsi:type="Property"/>
                              </source>
                              <return>
                                 <expression xsi:type="Lower">
                                    <operand xsi:type="SingletonFrom">
                                       <operand name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                                          <operand path="coding" xsi:type="Property">
                                             <source path="code" scope="pis" xsi:type="Property"/>
                                          </operand>
                                       </operand>
                                    </operand>
                                 </expression>
                              </return>
                           </then>
                           <else xsi:type="List"/>
                        </expression>
                     </source>
                     <return distinct="false">
                        <expression asType="t:String" xsi:type="As">
                           <operand name="X" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </operand>
               </expression>
            </return>
         </expression>
      </def>
      <def name="Unprescribed Opioids" context="Patient" accessLevel="Public">
         <expression xsi:type="Except">
            <operand name="Opioids From Most Recent Screening" xsi:type="ExpressionRef"/>
            <operand name="Prescribed Opioids" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Has Unprescribed Opioids?" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand name="Unprescribed Opioids" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Positive Illicit Drug Screening" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="mostRecentScreening">
               <expression name="Most Recent Illicit Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </source>
            <where xsi:type="Contains">
               <operand name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                  <operand path="coding" xsi:type="Property">
                     <source path="interpretation" scope="mostRecentScreening" xsi:type="Property"/>
                  </operand>
               </operand>
               <operand name="Positive" xsi:type="CodeRef"/>
            </where>
         </expression>
      </def>
      <def name="Has Illicit Drugs in Screening?" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="ToList">
               <operand name="Positive Illicit Drug Screening" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="Inclusion Criteria" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="And">
               <operand xsi:type="And">
                  <operand xsi:type="GreaterOrEqual">
                     <operand precision="Year" xsi:type="CalculateAge">
                        <operand path="birthDate.value" xsi:type="Property">
                           <source name="Patient" xsi:type="ExpressionRef"/>
                        </operand>
                     </operand>
                     <operand valueType="t:Integer" value="18" xsi:type="Literal"/>
                  </operand>
                  <operand name="Patient on Opioids with Abuse Potential" xsi:type="ExpressionRef"/>
               </operand>
               <operand xsi:type="AnyTrue">
                  <source name="ProbableDaysInRange" libraryName="Common" xsi:type="FunctionRef">
                     <operand name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
                     <operand valueType="t:Integer" value="90" xsi:type="Literal"/>
                     <operand valueType="t:Integer" value="80" xsi:type="Literal"/>
                  </source>
               </operand>
            </operand>
            <operand xsi:type="Or">
               <operand xsi:type="Or">
                  <operand xsi:type="Or">
                     <operand name="No Urine Screening In Last 12 Months" xsi:type="ExpressionRef"/>
                     <operand name="Has Missing Opioids?" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand name="Has Unprescribed Opioids?" xsi:type="ExpressionRef"/>
               </operand>
               <operand name="Has Illicit Drugs in Screening?" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="Has Opioids in Screening?" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="ToList">
               <operand name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="No Screening In Last 12 Months Indicator" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Missing Opioids Indicator" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Unprescribed Opioids Indicator" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Illicit Drugs Indicator" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="No Screening In Last 12 Months Summary" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="No Urine Screening In Last 12 Months" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then valueType="t:String" value="Annual Urine Screening Check" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Missing Opioids Summary" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="Has Missing Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then valueType="t:String" value="Prescribed Opioids Not Found In Urine Screening" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Unprescribed Opioids Summary" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="Has Unprescribed Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then valueType="t:String" value="Unprescribed Opioids Found In Urine Screening" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Illicit Drugs Summary" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="Has Illicit Drugs in Screening?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then valueType="t:String" value="Illicit Drugs Found In Urine Screening" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="No Screening In Last 12 Months Detail" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="No Urine Screening In Last 12 Months" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then valueType="t:String" value="Patients on opioid therapy should have a urine drug test performed every 12 months." xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Missing Opioids Detail" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="Has Missing Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then xsi:type="Concatenate">
               <operand valueType="t:String" value="The following opioids are missing from the screening: " xsi:type="Literal"/>
               <operand xsi:type="Combine">
                  <source name="Missing Opioids" xsi:type="ExpressionRef"/>
                  <separator valueType="t:String" value=", " xsi:type="Literal"/>
               </operand>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Unprescribed Opioids Detail" context="Patient" accessLevel="Public">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="And">
                  <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand name="Has Unprescribed Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then xsi:type="Concatenate">
               <operand valueType="t:String" value="Found the following unprescribed opioid(s): " xsi:type="Literal"/>
               <operand xsi:type="Combine">
                  <source name="Unprescribed Opioids" xsi:type="ExpressionRef"/>
                  <separator valueType="t:String" value=", " xsi:type="Literal"/>
               </operand>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def name="Illicit Drugs Detail" context="Patient" accessLevel="Public">
         <expression xsi:type="Query">
            <source alias="positiveIllicitDrugScreening">
               <expression name="Positive Illicit Drug Screening" xsi:type="ExpressionRef"/>
            </source>
            <let identifier="illicitDrugs">
               <expression name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                  <operand path="coding" xsi:type="Property">
                     <source path="code" scope="positiveIllicitDrugScreening" xsi:type="Property"/>
                  </operand>
               </expression>
            </let>
            <return>
               <expression xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand xsi:type="And">
                        <operand name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                        <operand name="Has Illicit Drugs in Screening?" xsi:type="ExpressionRef"/>
                     </operand>
                  </condition>
                  <then xsi:type="Concatenate">
                     <operand valueType="t:String" value="Found the following illicit drug(s) in urine drug screen: " xsi:type="Literal"/>
                     <operand xsi:type="If">
                        <condition asType="t:Boolean" xsi:type="As">
                           <operand xsi:type="IsNull">
                              <operand name="illicitDrugs" xsi:type="QueryLetRef"/>
                           </operand>
                        </condition>
                        <then valueType="t:String" value="could not determine the drug name" xsi:type="Literal"/>
                        <else xsi:type="SingletonFrom">
                           <operand name="illicitDrugs" xsi:type="QueryLetRef"/>
                        </else>
                     </operand>
                  </then>
                  <else asType="t:String" xsi:type="As">
                     <operand xsi:type="Null"/>
                  </else>
               </expression>
            </return>
         </expression>
      </def>
   </statements>
</library>

