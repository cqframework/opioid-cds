<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <identifier id="OpioidCDS_STU3_REC_04" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <includes>
      <def localId="2" localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
      <def localId="3" localIdentifier="Common" path="OpioidCDS_STU3_Common" version="0.1.0"/>
   </includes>
   <parameters>
      <def localId="6" name="ContextPrescriptions" accessLevel="Public">
         <parameterTypeSpecifier localId="5" xsi:type="ListTypeSpecifier">
            <elementType localId="4" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="14" name="Inclusion Period" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="14">
               <a:s>define &quot;Inclusion Period&quot;:&#xd;
  </a:s>
               <a:s r="13">
                  <a:s>Interval[</a:s>
                  <a:s r="9">
                     <a:s r="7">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s> - </a:s>
                     <a:s r="8">
                        <a:s>91 days</a:s>
                     </a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="12">
                     <a:s r="10">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s> - </a:s>
                     <a:s r="11">
                        <a:s>1 days</a:s>
                     </a:s>
                  </a:s>
                  <a:s>]</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="13" lowClosed="true" highClosed="true" xsi:type="Interval">
            <low localId="9" xsi:type="Subtract">
               <operand localId="7" xsi:type="Today"/>
               <operand localId="8" value="91" unit="days" xsi:type="Quantity"/>
            </low>
            <high localId="12" xsi:type="Subtract">
               <operand localId="10" xsi:type="Today"/>
               <operand localId="11" value="1" unit="days" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def localId="24" name="Encounter Period" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="24">
               <a:s>define &quot;Encounter Period&quot;:&#xd;
  </a:s>
               <a:s r="23">
                  <a:s>Interval[</a:s>
                  <a:s r="19">
                     <a:s r="17">
                        <a:s r="15">
                           <a:s>Today()</a:s>
                        </a:s>
                        <a:s> - </a:s>
                        <a:s r="16">
                           <a:s>12 months</a:s>
                        </a:s>
                     </a:s>
                     <a:s> - </a:s>
                     <a:s r="18">
                        <a:s>1 days</a:s>
                     </a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="22">
                     <a:s r="20">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s> - </a:s>
                     <a:s r="21">
                        <a:s>1 days</a:s>
                     </a:s>
                  </a:s>
                  <a:s>]</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="23" lowClosed="true" highClosed="true" xsi:type="Interval">
            <low localId="19" xsi:type="Subtract">
               <operand localId="17" xsi:type="Subtract">
                  <operand localId="15" xsi:type="Today"/>
                  <operand localId="16" value="12" unit="months" xsi:type="Quantity"/>
               </operand>
               <operand localId="18" value="1" unit="days" xsi:type="Quantity"/>
            </low>
            <high localId="22" xsi:type="Subtract">
               <operand localId="20" xsi:type="Today"/>
               <operand localId="21" value="1" unit="days" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def localId="39" name="Trigger Event Prescriptions" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="39">
               <a:s>define &quot;Trigger Event Prescriptions&quot;:&#xd;
  </a:s>
               <a:s r="38">
                  <a:s>
                     <a:s r="26">
                        <a:s r="25">
                           <a:s>
                              <a:s>ContextPrescriptions</a:s>
                           </a:s>
                        </a:s>
                        <a:s> triggerScripts</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
      </a:s>
                  <a:s r="37">
                     <a:s>where </a:s>
                     <a:s r="37">
                        <a:s r="31">
                           <a:s r="28">
                              <a:s r="27">
                                 <a:s>triggerScripts</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="28">
                                 <a:s>medication</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="30">
                              <a:s r="29">
                                 <a:s>Common</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="30">
                                 <a:s>&quot;Ambulatory Abuse Potential Opioids&quot;</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
        and </a:s>
                        <a:s r="36">
                           <a:s r="33">
                              <a:s r="32">
                                 <a:s>triggerScripts</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="33">
                                 <a:s>medication</a:s>
                              </a:s>
                           </a:s>
                           <a:s> in </a:s>
                           <a:s r="35">
                              <a:s r="34">
                                 <a:s>Common</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="35">
                                 <a:s>&quot;Long Acting Opioids&quot;</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="38" xsi:type="Query">
            <source localId="26" alias="triggerScripts">
               <expression localId="25" name="ContextPrescriptions" xsi:type="ParameterRef"/>
            </source>
            <where localId="37" xsi:type="And">
               <operand localId="31" xsi:type="InValueSet">
                  <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand asType="fhir:CodeableConcept" xsi:type="As">
                        <operand localId="28" path="medication" scope="triggerScripts" xsi:type="Property"/>
                     </operand>
                  </code>
                  <valueset localId="30" name="Ambulatory Abuse Potential Opioids" libraryName="Common"/>
               </operand>
               <operand localId="36" xsi:type="InValueSet">
                  <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand asType="fhir:CodeableConcept" xsi:type="As">
                        <operand localId="33" path="medication" scope="triggerScripts" xsi:type="Property"/>
                     </operand>
                  </code>
                  <valueset localId="35" name="Long Acting Opioids" libraryName="Common"/>
               </operand>
            </where>
         </expression>
      </def>
      <def localId="42" name="Validate Trigger Event" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="42">
               <a:s>define &quot;Validate Trigger Event&quot;:&#xd;
  </a:s>
               <a:s r="41">
                  <a:s>exists</a:s>
                  <a:s r="40">
                     <a:s>( </a:s>
                     <a:s r="40">
                        <a:s>&quot;Trigger Event Prescriptions&quot;</a:s>
                     </a:s>
                     <a:s> )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="41" xsi:type="Exists">
            <operand localId="40" name="Trigger Event Prescriptions" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="54" name="Exclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="54">
               <a:s>define &quot;Exclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="53">
                  <a:s r="49">
                     <a:s r="48">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="49">
                        <a:s>&quot;End of Life Assessment&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    or </a:s>
                  <a:s r="52">
                     <a:s r="50">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="52">
                        <a:s>&quot;Is Context Prescription End of Life Opioid?&quot;(</a:s>
                        <a:s r="51">
                           <a:s>ContextPrescriptions</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="53" xsi:type="Or">
            <operand localId="49" name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>            
         </expression>
      </def>
      <def localId="82" name="Inclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="82">
               <a:s>define &quot;Inclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="81">
                  <a:s r="69">
                     <a:s r="57">
                        <a:s r="47">
                           <a:s r="45">
                              <a:s r="43">
                                 <a:s>AgeInYears()</a:s>
                              </a:s>
                              <a:s r="44"> >= 18</a:s>
                           </a:s>
                           <a:s>&#xd;
    and </a:s>
                           <a:s r="46">
                              <a:s>&quot;Validate Trigger Event&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    and </a:s>
                        <a:s r="56">
                           <a:s>not </a:s>
                           <a:s r="55">
                              <a:s>&quot;Exclusion Criteria&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    and </a:s>
                     <a:s r="68">
                        <a:s>not </a:s>
                        <a:s r="67">
                           <a:s>exists</a:s>
                           <a:s r="66">
                              <a:s>(&#xd;
      </a:s>
                              <a:s r="66">
                                 <a:s>
                                    <a:s r="59">
                                       <a:s r="58">
                                          <a:s>
                                             <a:s>Common.&quot;Ambulatory Opioid Rx&quot;</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> orders</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
        </a:s>
                                 <a:s r="65">
                                    <a:s>where </a:s>
                                    <a:s r="65">
                                       <a:s r="63">
                                          <a:s>date from </a:s>
                                          <a:s r="62">
                                             <a:s r="61">
                                                <a:s r="60">
                                                   <a:s>orders</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="61">
                                                   <a:s>authoredOn</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="62">
                                                <a:s>value</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> in day of </a:s>
                                       <a:s r="64">
                                          <a:s>&quot;Inclusion Period&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>&#xd;
    )</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    and </a:s>
                  <a:s r="80">
                     <a:s>exists</a:s>
                     <a:s r="79">
                        <a:s>(&#xd;
      </a:s>
                        <a:s r="79">
                           <a:s>
                              <a:s r="71">
                                 <a:s r="70">
                                    <a:s r="70">
                                       <a:s>[Encounter]</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> encounters</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
        </a:s>
                           <a:s r="78">
                              <a:s>where </a:s>
                              <a:s r="78">
                                 <a:s r="76">
                                    <a:s>date from </a:s>
                                    <a:s r="75">
                                       <a:s r="74">
                                          <a:s r="73">
                                             <a:s r="72">
                                                <a:s>encounters</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="73">
                                                <a:s>period</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="74">
                                             <a:s>&quot;start&quot;</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="75">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> in day of </a:s>
                                 <a:s r="77">
                                    <a:s>&quot;Encounter Period&quot;</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    )</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="81" xsi:type="And">
            <operand localId="69" xsi:type="And">
               <operand localId="57" xsi:type="And">
                  <operand localId="47" xsi:type="And">
                     <operand localId="45" xsi:type="GreaterOrEqual">
                        <operand localId="43" precision="Year" xsi:type="CalculateAge">
                           <operand path="birthDate.value" xsi:type="Property">
                              <source name="Patient" xsi:type="ExpressionRef"/>
                           </operand>
                        </operand>
                        <operand localId="44" valueType="t:Integer" value="18" xsi:type="Literal"/>
                     </operand>
                     <operand localId="46" name="Validate Trigger Event" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand localId="56" xsi:type="Not">
                     <operand localId="55" name="Exclusion Criteria" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
               <operand localId="68" xsi:type="Not">
                  <operand localId="67" xsi:type="Exists">
                     <operand localId="66" xsi:type="Query">
                        <source localId="59" alias="orders">
                           <expression localId="58" name="Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
                        </source>
                        <where localId="65" precision="Day" xsi:type="In">
                           <operand localId="63" xsi:type="DateFrom">
                              <operand localId="62" path="value" xsi:type="Property">
                                 <source localId="61" path="authoredOn" scope="orders" xsi:type="Property"/>
                              </operand>
                           </operand>
                           <operand localId="64" name="Inclusion Period" xsi:type="ExpressionRef"/>
                        </where>
                     </operand>
                  </operand>
               </operand>
            </operand>
            <operand localId="80" xsi:type="Exists">
               <operand localId="79" xsi:type="Query">
                  <source localId="71" alias="encounters">
                     <expression localId="70" dataType="fhir:Encounter" xsi:type="Retrieve"/>
                  </source>
                  <where localId="78" precision="Day" xsi:type="In">
                     <operand localId="76" xsi:type="DateFrom">
                        <operand localId="75" path="value" xsi:type="Property">
                           <source localId="74" path="start" xsi:type="Property">
                              <source localId="73" path="period" scope="encounters" xsi:type="Property"/>
                           </source>
                        </operand>
                     </operand>
                     <operand localId="77" name="Encounter Period" xsi:type="ExpressionRef"/>
                  </where>
               </operand>
            </operand>
         </expression>
      </def>
      <def localId="87" name="Get Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="87">
               <a:s>define &quot;Get Indicator&quot;:&#xd;
  </a:s>
               <a:s r="86">
                  <a:s>if </a:s>
                  <a:s r="83">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="84">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="85">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="86" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="83" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="84" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="85" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="92" name="Get Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="92">
               <a:s>define &quot;Get Summary&quot;:&#xd;
  </a:s>
               <a:s r="91">
                  <a:s>if </a:s>
                  <a:s r="88">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="89">
                     <a:s>'Recommend use of immediate-release opioids instead of extended release/long acting opioids when starting patient on opioids.'</a:s>
                  </a:s>
                  <a:s r="90">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="91" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="88" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="89" valueType="t:String" value="Recommend use of immediate-release opioids instead of extended release/long acting opioids when starting patient on opioids." xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="90" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="103" name="Get Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="103">
               <a:s>define &quot;Get Detail&quot;:&#xd;
  </a:s>
               <a:s r="102">
                  <a:s>if </a:s>
                  <a:s r="93">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="100">
                     <a:s r="94">
                        <a:s>'The following medication requests(s) release rates should be re-evaluated: '</a:s>
                     </a:s>
                     <a:s> + </a:s>
                     <a:s r="99">
                        <a:s>Combine(</a:s>
                        <a:s r="97">
                           <a:s r="95">
                              <a:s>Common</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="97">
                              <a:s>GetMedicationNames(</a:s>
                              <a:s r="96">
                                 <a:s>&quot;Trigger Event Prescriptions&quot;</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="98">
                           <a:s>', '</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
                  <a:s r="101">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="102" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="93" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="100" xsi:type="Concatenate">
               <operand localId="94" valueType="t:String" value="The following medication requests(s) release rates should be re-evaluated: " xsi:type="Literal"/>
               <operand localId="99" xsi:type="Combine">
                  <source xsi:type="Query">
                     <source alias="X">
                        <expression localId="97" name="GetMedicationNames" libraryName="Common" xsi:type="FunctionRef">
                           <operand localId="96" name="Trigger Event Prescriptions" xsi:type="ExpressionRef"/>
                        </expression>
                     </source>
                     <return distinct="false">
                        <expression xsi:type="SingletonFrom">
                           <operand name="X" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </source>
                  <separator localId="98" valueType="t:String" value=", " xsi:type="Literal"/>
               </operand>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand localId="101" xsi:type="Null"/>
            </else>
         </expression>
      </def>
   </statements>
</library>
