<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="OpioidCDS_STU3_REC_08" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <includes>
      <def localId="2" localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
      <def localId="3" localIdentifier="Common" path="OpioidCDS_STU3_Common" version="0.1.0"/>
   </includes>
   <parameters>
      <def localId="6" name="ContextPrescriptions" accessLevel="Public">
         <parameterTypeSpecifier localId="5" xsi:type="ListTypeSpecifier">
            <elementType localId="4" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="16" name="Validate Trigger Event" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="16">
               <a:s>define &quot;Validate Trigger Event&quot;:&#xd;
  </a:s>
               <a:s r="15">
                  <a:s>exists</a:s>
                  <a:s r="14">
                     <a:s>(&#xd;
    </a:s>
                     <a:s r="14">
                        <a:s>
                           <a:s r="8">
                              <a:s r="7">
                                 <a:s>
                                    <a:s>ContextPrescriptions</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> triggerScript</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      </a:s>
                        <a:s r="13">
                           <a:s>where </a:s>
                           <a:s r="13">
                              <a:s r="10">
                                 <a:s r="9">
                                    <a:s>triggerScript</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="10">
                                    <a:s>medication</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="12">
                                 <a:s r="11">
                                    <a:s>Common</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="12">
                                    <a:s>&quot;Ambulatory Abuse Potential Opioids&quot;</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="15" xsi:type="Exists">
            <operand localId="14" xsi:type="Query">
               <source localId="8" alias="triggerScript">
                  <expression localId="7" name="ContextPrescriptions" xsi:type="ParameterRef"/>
               </source>
               <where localId="13" xsi:type="InValueSet">
                  <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand asType="fhir:CodeableConcept" xsi:type="As">
                        <operand localId="10" path="medication" scope="triggerScript" xsi:type="Property"/>
                     </operand>
                  </code>
                  <valueset localId="12" name="Ambulatory Abuse Potential Opioids" libraryName="Common"/>
               </where>
            </operand>
         </expression>
      </def>
      <def localId="25" name="On Naloxone" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="25">
               <a:s>define &quot;On Naloxone&quot;:&#xd;
  </a:s>
               <a:s r="24">
                  <a:s>exists</a:s>
                  <a:s r="23">
                     <a:s>( </a:s>
                     <a:s r="23">
                        <a:s r="22">
                           <a:s>Common</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="23">
                           <a:s>&quot;Active Ambulatory Naloxone Rx&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="24" xsi:type="Exists">
            <operand localId="23" name="Active Ambulatory Naloxone Rx" libraryName="Common" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="34" name="Exclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="34">
               <a:s>define &quot;Exclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="33">
                  <a:s r="29">
                     <a:s r="26">
                        <a:s>&quot;On Naloxone&quot;</a:s>
                     </a:s>
                     <a:s>&#xd;
    or </a:s>
                     <a:s r="28">
                        <a:s r="27">
                           <a:s>Common</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="28">
                           <a:s>&quot;End of Life Assessment&quot;</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    or </a:s>
                  <a:s r="32">
                     <a:s r="30">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="32">
                        <a:s>&quot;Is Context Prescription End of Life Opioid?&quot;(</a:s>
                        <a:s r="31">
                           <a:s>ContextPrescriptions</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="33" xsi:type="Or">
            <operand localId="29" xsi:type="Or">
               <operand localId="26" name="On Naloxone" xsi:type="ExpressionRef"/>
               <operand localId="28" name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="44" name="Total MME" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="44">
               <a:s>define &quot;Total MME&quot;:&#xd;
  </a:s>
               <a:s r="43">
                  <a:s r="38">
                     <a:s>Common</a:s>
                  </a:s>
                  <a:s>.</a:s>
                  <a:s r="43">
                     <a:s>TotalMME(</a:s>
                     <a:s r="42">
                        <a:s r="40">
                           <a:s r="39">
                              <a:s>Common</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="40">
                              <a:s>&quot;Active Ambulatory Opioid Rx&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> union </a:s>
                        <a:s r="41">
                           <a:s>ContextPrescriptions</a:s>
                        </a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="43" name="TotalMME" libraryName="Common" xsi:type="FunctionRef">
            <operand localId="42" xsi:type="Union">
               <operand localId="40" name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
               <operand localId="41" name="ContextPrescriptions" xsi:type="ParameterRef"/>
            </operand>
         </expression>
      </def>
      <def localId="51" name="On Benzodiazepine" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="51">
               <a:s>define &quot;On Benzodiazepine&quot;:&#xd;
  </a:s>
               <a:s r="50">
                  <a:s>exists</a:s>
                  <a:s r="49">
                     <a:s>( </a:s>
                     <a:s r="49">
                        <a:s r="48">
                           <a:s>Common</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="49">
                           <a:s>&quot;Active Ambulatory Benzodiazepine Rx&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="50" xsi:type="Exists">
            <operand localId="49" name="Active Ambulatory Benzodiazepine Rx" libraryName="Common" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="56" name="Has Substance Abuse History" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="56">
               <a:s>define &quot;Has Substance Abuse History&quot;:&#xd;
  </a:s>
               <a:s r="55">
                  <a:s>exists </a:s>
                  <a:s r="54">
                     <a:s>( </a:s>
                     <a:s r="54">
                        <a:s>[Condition: </a:s>
                        <a:s>
                           <a:s>Common.&quot;Substance Abuse&quot;</a:s>
                        </a:s>
                        <a:s>]</a:s>
                     </a:s>
                     <a:s> )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="55" xsi:type="Exists">
            <operand localId="54" dataType="fhir:Condition" codeProperty="code" xsi:type="Retrieve">
               <codes name="Substance Abuse" libraryName="Common" xsi:type="ValueSetRef"/>
            </operand>
         </expression>
      </def>
      <def localId="60" name="Inclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="60">
               <a:s>define &quot;Inclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="59">
                  <a:s r="37">
                     <a:s r="21">
                        <a:s r="19">
                           <a:s r="17">
                              <a:s>AgeInYears()</a:s>
                           </a:s>
                           <a:s r="18"> >= 18</a:s>
                        </a:s>
                        <a:s>&#xd;
    and </a:s>
                        <a:s r="20">
                           <a:s>&quot;Validate Trigger Event&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    and </a:s>
                     <a:s r="36">
                        <a:s>not </a:s>
                        <a:s r="35">
                           <a:s>&quot;Exclusion Criteria&quot;</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    and </a:s>
                  <a:s r="58">
                     <a:s>(&#xd;
      </a:s>
                     <a:s r="58">
                        <a:s r="53">
                           <a:s r="47">
                              <a:s r="45">
                                 <a:s>&quot;Total MME&quot;</a:s>
                              </a:s>
                              <a:s> >= </a:s>
                              <a:s r="46">
                                 <a:s>50 'mg/d'</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
        or </a:s>
                           <a:s r="52">
                              <a:s>&quot;On Benzodiazepine&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
        or </a:s>
                        <a:s r="57">
                           <a:s>&quot;Has Substance Abuse History&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="59" xsi:type="And">
            <operand localId="37" xsi:type="And">
               <operand localId="21" xsi:type="And">
                  <operand localId="19" xsi:type="GreaterOrEqual">
                     <operand localId="17" precision="Year" xsi:type="CalculateAge">
                        <operand path="birthDate.value" xsi:type="Property">
                           <source name="Patient" xsi:type="ExpressionRef"/>
                        </operand>
                     </operand>
                     <operand localId="18" valueType="t:Integer" value="18" xsi:type="Literal"/>
                  </operand>
                  <operand localId="20" name="Validate Trigger Event" xsi:type="ExpressionRef"/>
               </operand>
               <operand localId="36" xsi:type="Not">
                  <operand localId="35" name="Exclusion Criteria" xsi:type="ExpressionRef"/>
               </operand>
            </operand>
            <operand localId="58" xsi:type="Or">
               <operand localId="53" xsi:type="Or">
                  <operand localId="47" xsi:type="GreaterOrEqual">
                     <operand localId="45" name="Total MME" xsi:type="ExpressionRef"/>
                     <operand localId="46" value="50" unit="mg/d" xsi:type="Quantity"/>
                  </operand>
                  <operand localId="52" name="On Benzodiazepine" xsi:type="ExpressionRef"/>
               </operand>
               <operand localId="57" name="Has Substance Abuse History" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="65" name="Get Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="65">
               <a:s>define &quot;Get Indicator&quot;:&#xd;
  </a:s>
               <a:s r="64">
                  <a:s>if </a:s>
                  <a:s r="61">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="62">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="63">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="64" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="61" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="62" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="63" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="70" name="Get Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="70">
               <a:s>define &quot;Get Summary&quot;:&#xd;
  </a:s>
               <a:s r="69">
                  <a:s>if </a:s>
                  <a:s r="66">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="67">
                     <a:s>'Incorporate into the management plan strategies to mitigate risk; including considering offering naloxone when factors that increase risk for opioid overdose are present'</a:s>
                  </a:s>
                  <a:s r="68">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="69" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="66" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="67" valueType="t:String" value="Incorporate into the management plan strategies to mitigate risk; including considering offering naloxone when factors that increase risk for opioid overdose are present" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="68" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="88" name="Detail Descriptions" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="88">
               <a:s>define &quot;Detail Descriptions&quot;:&#xd;
   </a:s>
               <a:s r="87">
                  <a:s>{&#xd;
    </a:s>
                  <a:s r="80">
                     <a:s>{ </a:s>
                     <a:s>
                        <a:s>hasCondition: </a:s>
                        <a:s r="73">
                           <a:s r="71">
                              <a:s>&quot;Total MME&quot;</a:s>
                           </a:s>
                           <a:s> >= </a:s>
                           <a:s r="72">
                              <a:s>50 'mg/day'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s>
                        <a:s>text: </a:s>
                        <a:s r="79">
                           <a:s r="77">
                              <a:s r="74">
                                 <a:s>'Average MME ('</a:s>
                              </a:s>
                              <a:s> + </a:s>
                              <a:s r="76">
                                 <a:s>ToString(</a:s>
                                 <a:s r="75">
                                    <a:s>&quot;Total MME&quot;</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> + </a:s>
                           <a:s r="78">
                              <a:s>') >= 50 mg/day'</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> }</a:s>
                  </a:s>
                  <a:s>,&#xd;
    </a:s>
                  <a:s r="83">
                     <a:s>{ </a:s>
                     <a:s>
                        <a:s>hasCondition: </a:s>
                        <a:s r="81">
                           <a:s>&quot;On Benzodiazepine&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s>
                        <a:s>text: </a:s>
                        <a:s r="82">
                           <a:s>'concurrent use of benzodiazepine'</a:s>
                        </a:s>
                     </a:s>
                     <a:s>}</a:s>
                  </a:s>
                  <a:s>,&#xd;
    </a:s>
                  <a:s r="86">
                     <a:s>{ </a:s>
                     <a:s>
                        <a:s>hasCondition: </a:s>
                        <a:s r="84">
                           <a:s>&quot;Has Substance Abuse History&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s>
                        <a:s>text: </a:s>
                        <a:s r="85">
                           <a:s>'history of alcohol or drug abuse'</a:s>
                        </a:s>
                     </a:s>
                     <a:s> }</a:s>
                  </a:s>
                  <a:s>&#xd;
  }</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="87" xsi:type="List">
            <element localId="80" xsi:type="Tuple">
               <element name="hasCondition">
                  <value localId="73" xsi:type="GreaterOrEqual">
                     <operand localId="71" name="Total MME" xsi:type="ExpressionRef"/>
                     <operand localId="72" value="50" unit="mg/day" xsi:type="Quantity"/>
                  </value>
               </element>
               <element name="text">
                  <value localId="79" xsi:type="Concatenate">
                     <operand localId="77" xsi:type="Concatenate">
                        <operand localId="74" valueType="t:String" value="Average MME (" xsi:type="Literal"/>
                        <operand localId="76" xsi:type="ToString">
                           <operand localId="75" name="Total MME" xsi:type="ExpressionRef"/>
                        </operand>
                     </operand>
                     <operand localId="78" valueType="t:String" value=") >= 50 mg/day" xsi:type="Literal"/>
                  </value>
               </element>
            </element>
            <element localId="83" xsi:type="Tuple">
               <element name="hasCondition">
                  <value localId="81" name="On Benzodiazepine" xsi:type="ExpressionRef"/>
               </element>
               <element name="text">
                  <value localId="82" valueType="t:String" value="concurrent use of benzodiazepine" xsi:type="Literal"/>
               </element>
            </element>
            <element localId="86" xsi:type="Tuple">
               <element name="hasCondition">
                  <value localId="84" name="Has Substance Abuse History" xsi:type="ExpressionRef"/>
               </element>
               <element name="text">
                  <value localId="85" valueType="t:String" value="history of alcohol or drug abuse" xsi:type="Literal"/>
               </element>
            </element>
         </expression>
      </def>
      <def localId="99" name="Detail List" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="99">
               <a:s>define &quot;Detail List&quot;:&#xd;
   </a:s>
               <a:s r="98">
                  <a:s>Combine(</a:s>
                  <a:s r="96">
                     <a:s>
                        <a:s r="90">
                           <a:s r="89">
                              <a:s>
                                 <a:s>&quot;Detail Descriptions&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s> dd</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="92">
                        <a:s>where </a:s>
                        <a:s r="92">
                           <a:s r="91">
                              <a:s>dd</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="92">
                              <a:s>hasCondition</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="95">
                        <a:s>return </a:s>
                        <a:s r="94">
                           <a:s r="93">
                              <a:s>dd</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="94">
                              <a:s>text</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="97">
                     <a:s>', '</a:s>
                  </a:s>
                  <a:s>)</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="98" xsi:type="Combine">
            <source localId="96" xsi:type="Query">
               <source localId="90" alias="dd">
                  <expression localId="89" name="Detail Descriptions" xsi:type="ExpressionRef"/>
               </source>
               <where localId="92" path="hasCondition" scope="dd" xsi:type="Property"/>
               <return localId="95">
                  <expression localId="94" path="text" scope="dd" xsi:type="Property"/>
               </return>
            </source>
            <separator localId="97" valueType="t:String" value=", " xsi:type="Literal"/>
         </expression>
      </def>
      <def localId="116" name="Get Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="116">
               <a:s>define &quot;Get Detail&quot;:&#xd;
  </a:s>
               <a:s r="115">
                  <a:s>if </a:s>
                  <a:s r="100">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then&#xd;
      </a:s>
                  <a:s r="113">
                     <a:s r="101">
                        <a:s>'Consider offering naloxone given following risk factor(s) for opioid overdose: '</a:s>
                     </a:s>
                     <a:s>&#xd;
        + </a:s>
                     <a:s r="112">
                        <a:s>if </a:s>
                        <a:s r="107">
                           <a:s r="103">
                              <a:s r="102">
                                 <a:s>&quot;Detail List&quot;</a:s>
                              </a:s>
                              <a:s> is not null</a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="106">
                              <a:s r="104">
                                 <a:s>&quot;Detail List&quot;</a:s>
                              </a:s>
                              <a:s> != </a:s>
                              <a:s r="105">
                                 <a:s>''</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
         then </a:s>
                        <a:s r="110">
                           <a:s r="108">
                              <a:s>&quot;Detail List&quot;</a:s>
                           </a:s>
                           <a:s> + </a:s>
                           <a:s r="109">
                              <a:s>'.'</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
        else </a:s>
                        <a:s r="111">
                           <a:s>'N/A.'</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s r="114">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="115" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="100" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="113" xsi:type="Concatenate">
               <operand localId="101" valueType="t:String" value="Consider offering naloxone given following risk factor(s) for opioid overdose: " xsi:type="Literal"/>
               <operand localId="112" xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand localId="107" xsi:type="And">
                        <operand localId="103" xsi:type="Not">
                           <operand xsi:type="IsNull">
                              <operand localId="102" name="Detail List" xsi:type="ExpressionRef"/>
                           </operand>
                        </operand>
                        <operand localId="106" xsi:type="Not">
                           <operand xsi:type="Equal">
                              <operand localId="104" name="Detail List" xsi:type="ExpressionRef"/>
                              <operand localId="105" valueType="t:String" value="" xsi:type="Literal"/>
                           </operand>
                        </operand>
                     </operand>
                  </condition>
                  <then localId="110" xsi:type="Concatenate">
                     <operand localId="108" name="Detail List" xsi:type="ExpressionRef"/>
                     <operand localId="109" valueType="t:String" value="." xsi:type="Literal"/>
                  </then>
                  <else localId="111" valueType="t:String" value="N/A." xsi:type="Literal"/>
               </operand>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand localId="114" xsi:type="Null"/>
            </else>
         </expression>
      </def>
   </statements>
</library>
