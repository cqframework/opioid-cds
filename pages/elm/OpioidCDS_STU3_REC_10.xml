<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation startLine="82" startChar="7" endLine="82" endChar="72" message="Could not resolve code path component-code for the type of the retrieve FHIR.Observation." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="82" startChar="7" endLine="82" endChar="72" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="94" startChar="7" endLine="94" endChar="71" message="Could not resolve code path component-code for the type of the retrieve FHIR.Observation." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="94" startChar="7" endLine="94" endChar="71" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <identifier id="OpioidCDS_STU3_REC_10" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <includes>
      <def localId="2" localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
      <def localId="3" localIdentifier="Common" path="OpioidCDS_STU3_Common" version="0.1.0"/>
   </includes>
   <parameters>
      <def localId="9" name="ContextPrescriptions" accessLevel="Public">
         <parameterTypeSpecifier localId="8" xsi:type="ListTypeSpecifier">
            <elementType localId="7" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <codeSystems>
      <def localId="4" name="V2 Interpretation Codes" id="http://hl7.org/fhir/v2/0078" accessLevel="Public"/>
   </codeSystems>
   <codes>
      <def localId="6" name="Positive" id="POS" accessLevel="Public">
         <codeSystem localId="5" name="V2 Interpretation Codes"/>
      </def>
   </codes>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="19" name="Lookback Year" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="19">
               <a:s>define &quot;Lookback Year&quot;:&#xd;
  </a:s>
               <a:s r="18">
                  <a:s>Interval[</a:s>
                  <a:s r="14">
                     <a:s r="12">
                        <a:s r="10">
                           <a:s>Today()</a:s>
                        </a:s>
                        <a:s> - </a:s>
                        <a:s r="11">
                           <a:s>12 months</a:s>
                        </a:s>
                     </a:s>
                     <a:s> - </a:s>
                     <a:s r="13">
                        <a:s>1 days</a:s>
                     </a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="17">
                     <a:s r="15">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s> - </a:s>
                     <a:s r="16">
                        <a:s>1 day</a:s>
                     </a:s>
                  </a:s>
                  <a:s>]</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="18" lowClosed="true" highClosed="true" xsi:type="Interval">
            <low localId="14" xsi:type="Subtract">
               <operand localId="12" xsi:type="Subtract">
                  <operand localId="10" xsi:type="Today"/>
                  <operand localId="11" value="12" unit="months" xsi:type="Quantity"/>
               </operand>
               <operand localId="13" value="1" unit="days" xsi:type="Quantity"/>
            </low>
            <high localId="17" xsi:type="Subtract">
               <operand localId="15" xsi:type="Today"/>
               <operand localId="16" value="1" unit="day" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def localId="29" name="Validate Trigger Event" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="29">
               <a:s>define &quot;Validate Trigger Event&quot;:&#xd;
  </a:s>
               <a:s r="28">
                  <a:s>exists </a:s>
                  <a:s r="27">
                     <a:s>(&#xd;
    </a:s>
                     <a:s r="27">
                        <a:s>
                           <a:s r="21">
                              <a:s r="20">
                                 <a:s>
                                    <a:s>ContextPrescriptions</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> triggerScript</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      </a:s>
                        <a:s r="26">
                           <a:s>where </a:s>
                           <a:s r="26">
                              <a:s r="23">
                                 <a:s r="22">
                                    <a:s>triggerScript</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="23">
                                    <a:s>medication</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="25">
                                 <a:s r="24">
                                    <a:s>Common</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="25">
                                    <a:s>&quot;Ambulatory Abuse Potential Opioids&quot;</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="28" xsi:type="Exists">
            <operand localId="27" xsi:type="Query">
               <source localId="21" alias="triggerScript">
                  <expression localId="20" name="ContextPrescriptions" xsi:type="ParameterRef"/>
               </source>
               <where localId="26" xsi:type="InValueSet">
                  <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand asType="fhir:CodeableConcept" xsi:type="As">
                        <operand localId="23" path="medication" scope="triggerScript" xsi:type="Property"/>
                     </operand>
                  </code>
                  <valueset localId="25" name="Ambulatory Abuse Potential Opioids" libraryName="Common"/>
               </where>
            </operand>
         </expression>
      </def>
      <def localId="41" name="Exclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="41">
               <a:s>define &quot;Exclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="40">
                  <a:s r="36">
                     <a:s r="35">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="36">
                        <a:s>&quot;End of Life Assessment&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    or </a:s>
                  <a:s r="39">
                     <a:s r="37">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="39">
                        <a:s>&quot;Is Context Prescription End of Life Opioid?&quot;(</a:s>
                        <a:s r="38">
                           <a:s>ContextPrescriptions</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="40" xsi:type="Or">
            <operand localId="36" name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="78" name="Illicit Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="78">
               <a:s>define &quot;Illicit Drug Urine Screenings in Last 12 Months&quot;:&#xd;
  </a:s>
               <a:s r="77">
                  <a:s>
                     <a:s r="72">
                        <a:s r="71">
                           <a:s>(&#xd;
    </a:s>
                           <a:s r="71">
                              <a:s r="61">
                                 <a:s>(&#xd;
      </a:s>
                                 <a:s r="61">
                                    <a:s>
                                       <a:s r="54">
                                          <a:s r="53">
                                             <a:s r="53">
                                                <a:s>[Observation: &quot;code&quot; in </a:s>
                                                <a:s>
                                                   <a:s>Common.&quot;Illicit Drug Screening&quot;</a:s>
                                                </a:s>
                                                <a:s>]</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> observation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>&#xd;
        </a:s>
                                    <a:s r="60">
                                       <a:s>where </a:s>
                                       <a:s r="60">
                                          <a:s r="58">
                                             <a:s>date from </a:s>
                                             <a:s r="57">
                                                <a:s r="56">
                                                   <a:s r="55">
                                                      <a:s>observation</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="56">
                                                      <a:s>effective</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="57">
                                                   <a:s>value</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> in day of </a:s>
                                          <a:s r="59">
                                             <a:s>&quot;Lookback Year&quot;</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
    )</a:s>
                              </a:s>
                              <a:s>&#xd;
    union </a:s>
                              <a:s r="70">
                                 <a:s>(&#xd;
      </a:s>
                                 <a:s r="70">
                                    <a:s>
                                       <a:s r="63">
                                          <a:s r="62">
                                             <a:s r="62">
                                                <a:s>[Observation: &quot;component-code&quot; in </a:s>
                                                <a:s>
                                                   <a:s>Common.&quot;Illicit Drug Screening&quot;</a:s>
                                                </a:s>
                                                <a:s>]</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> observation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>&#xd;
        </a:s>
                                    <a:s r="69">
                                       <a:s>where </a:s>
                                       <a:s r="69">
                                          <a:s r="67">
                                             <a:s>date from </a:s>
                                             <a:s r="66">
                                                <a:s r="65">
                                                   <a:s r="64">
                                                      <a:s>observation</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="65">
                                                      <a:s>effective</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="66">
                                                   <a:s>value</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> in day of </a:s>
                                          <a:s r="68">
                                             <a:s>&quot;Lookback Year&quot;</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
    )</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
  )</a:s>
                        </a:s>
                        <a:s> obs</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    </a:s>
                  <a:s r="76">
                     <a:s>sort by </a:s>
                     <a:s r="75">
                        <a:s r="74">
                           <a:s r="73">
                              <a:s>effective</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="74">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="77" xsi:type="Query">
            <source localId="72" alias="obs">
               <expression localId="71" xsi:type="Union">
                  <operand localId="61" xsi:type="Query">
                     <source localId="54" alias="observation">
                        <expression localId="53" dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                           <codes name="Illicit Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where localId="60" precision="Day" xsi:type="In">
                        <operand localId="58" xsi:type="DateFrom">
                           <operand localId="57" path="value" xsi:type="Property">
                              <source localId="56" path="effective" scope="observation" xsi:type="Property"/>
                           </operand>
                        </operand>
                        <operand localId="59" name="Lookback Year" xsi:type="ExpressionRef"/>
                     </where>
                  </operand>
                  <operand localId="70" xsi:type="Query">
                     <source localId="63" alias="observation">
                        <expression localId="62" dataType="fhir:Observation" codeProperty="component-code" xsi:type="Retrieve">
                           <codes name="Illicit Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where localId="69" precision="Day" xsi:type="In">
                        <operand localId="67" xsi:type="DateFrom">
                           <operand localId="66" path="value" xsi:type="Property">
                              <source localId="65" path="effective" scope="observation" xsi:type="Property"/>
                           </operand>
                        </operand>
                        <operand localId="68" name="Lookback Year" xsi:type="ExpressionRef"/>
                     </where>
                  </operand>
               </expression>
            </source>
            <sort localId="76">
               <by localId="75" direction="asc" xsi:type="ByExpression">
                  <expression localId="74" path="value" xsi:type="Property">
                     <source localId="73" name="effective" xsi:type="IdentifierRef"/>
                  </expression>
               </by>
            </sort>
         </expression>
      </def>
      <def localId="81" name="Most Recent Illicit Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="81">
               <a:s>define &quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months&quot;:&#xd;
  </a:s>
               <a:s r="80">
                  <a:s>Last( </a:s>
                  <a:s r="79">
                     <a:s>&quot;Illicit Drug Urine Screenings in Last 12 Months&quot;</a:s>
                  </a:s>
                  <a:s> )</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="80" xsi:type="Last">
            <source localId="79" name="Illicit Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="109" name="Opioid Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="109">
               <a:s>define &quot;Opioid Drug Urine Screenings in Last 12 Months&quot;:&#xd;
  </a:s>
               <a:s r="108">
                  <a:s>
                     <a:s r="103">
                        <a:s r="102">
                           <a:s>(&#xd;
    </a:s>
                           <a:s r="102">
                              <a:s r="92">
                                 <a:s>(</a:s>
                                 <a:s r="92">
                                    <a:s>
                                       <a:s r="85">
                                          <a:s r="84">
                                             <a:s r="84">
                                                <a:s>[Observation: &quot;code&quot; in </a:s>
                                                <a:s>
                                                   <a:s>Common.&quot;Opioid Drug Screening&quot;</a:s>
                                                </a:s>
                                                <a:s>]</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> observation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>&#xd;
      </a:s>
                                    <a:s r="91">
                                       <a:s>where </a:s>
                                       <a:s r="91">
                                          <a:s r="89">
                                             <a:s>date from </a:s>
                                             <a:s r="88">
                                                <a:s r="87">
                                                   <a:s r="86">
                                                      <a:s>observation</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="87">
                                                      <a:s>effective</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="88">
                                                   <a:s>value</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> in day of </a:s>
                                          <a:s r="90">
                                             <a:s>&quot;Lookback Year&quot;</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
    )</a:s>
                              </a:s>
                              <a:s>&#xd;
    union </a:s>
                              <a:s r="101">
                                 <a:s>(&#xd;
      </a:s>
                                 <a:s r="101">
                                    <a:s>
                                       <a:s r="94">
                                          <a:s r="93">
                                             <a:s r="93">
                                                <a:s>[Observation: &quot;component-code&quot; in </a:s>
                                                <a:s>
                                                   <a:s>Common.&quot;Opioid Drug Screening&quot;</a:s>
                                                </a:s>
                                                <a:s>]</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> observation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>&#xd;
        </a:s>
                                    <a:s r="100">
                                       <a:s>where </a:s>
                                       <a:s r="100">
                                          <a:s r="98">
                                             <a:s>date from </a:s>
                                             <a:s r="97">
                                                <a:s r="96">
                                                   <a:s r="95">
                                                      <a:s>observation</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="96">
                                                      <a:s>effective</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="97">
                                                   <a:s>value</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> in day of </a:s>
                                          <a:s r="99">
                                             <a:s>&quot;Lookback Year&quot;</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
    )</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
  )</a:s>
                        </a:s>
                        <a:s> obs</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    </a:s>
                  <a:s r="107">
                     <a:s>sort by </a:s>
                     <a:s r="106">
                        <a:s r="105">
                           <a:s r="104">
                              <a:s>effective</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="105">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="108" xsi:type="Query">
            <source localId="103" alias="obs">
               <expression localId="102" xsi:type="Union">
                  <operand localId="92" xsi:type="Query">
                     <source localId="85" alias="observation">
                        <expression localId="84" dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                           <codes name="Opioid Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where localId="91" precision="Day" xsi:type="In">
                        <operand localId="89" xsi:type="DateFrom">
                           <operand localId="88" path="value" xsi:type="Property">
                              <source localId="87" path="effective" scope="observation" xsi:type="Property"/>
                           </operand>
                        </operand>
                        <operand localId="90" name="Lookback Year" xsi:type="ExpressionRef"/>
                     </where>
                  </operand>
                  <operand localId="101" xsi:type="Query">
                     <source localId="94" alias="observation">
                        <expression localId="93" dataType="fhir:Observation" codeProperty="component-code" xsi:type="Retrieve">
                           <codes name="Opioid Drug Screening" libraryName="Common" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where localId="100" precision="Day" xsi:type="In">
                        <operand localId="98" xsi:type="DateFrom">
                           <operand localId="97" path="value" xsi:type="Property">
                              <source localId="96" path="effective" scope="observation" xsi:type="Property"/>
                           </operand>
                        </operand>
                        <operand localId="99" name="Lookback Year" xsi:type="ExpressionRef"/>
                     </where>
                  </operand>
               </expression>
            </source>
            <sort localId="107">
               <by localId="106" direction="asc" xsi:type="ByExpression">
                  <expression localId="105" path="value" xsi:type="Property">
                     <source localId="104" name="effective" xsi:type="IdentifierRef"/>
                  </expression>
               </by>
            </sort>
         </expression>
      </def>
      <def localId="112" name="Most Recent Opioid Drug Urine Screenings in Last 12 Months" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="112">
               <a:s>define &quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months&quot;:&#xd;
  </a:s>
               <a:s r="111">
                  <a:s>Last( </a:s>
                  <a:s r="110">
                     <a:s>&quot;Opioid Drug Urine Screenings in Last 12 Months&quot;</a:s>
                  </a:s>
                  <a:s> )</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="111" xsi:type="Last">
            <source localId="110" name="Opioid Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="116" name="No Urine Screening In Last 12 Months" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="116">
               <a:s>define &quot;No Urine Screening In Last 12 Months&quot;:&#xd;
  </a:s>
               <a:s r="115">
                  <a:s r="83">
                     <a:s r="82">
                        <a:s>&quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months&quot;</a:s>
                     </a:s>
                     <a:s> is null</a:s>
                  </a:s>
                  <a:s>&#xd;
    and </a:s>
                  <a:s r="114">
                     <a:s r="113">
                        <a:s>&quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months&quot;</a:s>
                     </a:s>
                     <a:s> is null</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="115" xsi:type="And">
            <operand localId="83" xsi:type="IsNull">
               <operand localId="82" name="Most Recent Illicit Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </operand>
            <operand localId="114" xsi:type="IsNull">
               <operand localId="113" name="Most Recent Opioid Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="154" name="Positive Opioid Drug Screening" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="154">
               <a:s>define &quot;Positive Opioid Drug Screening&quot;:&#xd;
  </a:s>
               <a:s r="153">
                  <a:s>
                     <a:s r="119">
                        <a:s r="118">
                           <a:s>
                              <a:s>&quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> mostRecentScreening</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
  </a:s>
                  <a:s r="152">
                     <a:s>where </a:s>
                     <a:s r="152">
                        <a:s r="126">
                           <a:s r="124">
                              <a:s r="120">
                                 <a:s>Common</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="124">
                                 <a:s>ToCodes(</a:s>
                                 <a:s r="123">
                                    <a:s r="122">
                                       <a:s r="121">
                                          <a:s>mostRecentScreening</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="122">
                                          <a:s>interpretation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="123">
                                       <a:s>coding</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> contains </a:s>
                           <a:s r="125">
                              <a:s>&quot;Positive&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    or&#xd;
    </a:s>
                        <a:s r="151">
                           <a:s>(&#xd;
        </a:s>
                           <a:s r="151">
                              <a:s>if </a:s>
                              <a:s r="133">
                                 <a:s r="129">
                                    <a:s r="128">
                                       <a:s r="127">
                                          <a:s>mostRecentScreening</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="128">
                                          <a:s>component</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="132">
                                    <a:s>exists</a:s>
                                    <a:s r="131">
                                       <a:s>(</a:s>
                                       <a:s r="131">
                                          <a:s r="130">
                                             <a:s>mostRecentScreening</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="131">
                                             <a:s>component</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>&#xd;
          then&#xd;
            </a:s>
                              <a:s r="149">
                                 <a:s>exists </a:s>
                                 <a:s r="148">
                                    <a:s>(</a:s>
                                    <a:s r="148">
                                       <a:s>
                                          <a:s r="135">
                                             <a:s r="134">
                                                <a:s>
                                                   <a:s>mostRecentScreening.component</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> c</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>&#xd;
              </a:s>
                                       <a:s r="147">
                                          <a:s>where </a:s>
                                          <a:s r="147">
                                             <a:s r="139">
                                                <a:s r="138">
                                                   <a:s r="137">
                                                      <a:s r="136">
                                                         <a:s>c</a:s>
                                                      </a:s>
                                                      <a:s>.</a:s>
                                                      <a:s r="137">
                                                         <a:s>interpretation</a:s>
                                                      </a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="138">
                                                      <a:s>coding</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> is not null</a:s>
                                             </a:s>
                                             <a:s> and&#xd;
                </a:s>
                                             <a:s r="146">
                                                <a:s r="144">
                                                   <a:s r="140">
                                                      <a:s>Common</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="144">
                                                      <a:s>ToCodes(</a:s>
                                                      <a:s r="143">
                                                         <a:s r="142">
                                                            <a:s r="141">
                                                               <a:s>c</a:s>
                                                            </a:s>
                                                            <a:s>.</a:s>
                                                            <a:s r="142">
                                                               <a:s>interpretation</a:s>
                                                            </a:s>
                                                         </a:s>
                                                         <a:s>.</a:s>
                                                         <a:s r="143">
                                                            <a:s>coding</a:s>
                                                         </a:s>
                                                      </a:s>
                                                      <a:s>)</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> contains </a:s>
                                                <a:s r="145">
                                                   <a:s>&quot;Positive&quot;</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="150">&#xd;
          else false</a:s>
                           </a:s>
                           <a:s>&#xd;
    )</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="153" xsi:type="Query">
            <source localId="119" alias="mostRecentScreening">
               <expression localId="118" name="Most Recent Opioid Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </source>
            <where localId="152" xsi:type="Or">
               <operand localId="126" xsi:type="Contains">
                  <operand localId="124" name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                     <operand localId="123" path="coding" xsi:type="Property">
                        <source localId="122" path="interpretation" scope="mostRecentScreening" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand localId="125" name="Positive" xsi:type="CodeRef"/>
               </operand>
               <operand localId="151" xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand localId="133" xsi:type="And">
                        <operand localId="129" xsi:type="Not">
                           <operand xsi:type="IsNull">
                              <operand localId="128" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                           </operand>
                        </operand>
                        <operand localId="132" xsi:type="Exists">
                           <operand localId="131" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                        </operand>
                     </operand>
                  </condition>
                  <then localId="149" xsi:type="Exists">
                     <operand localId="148" xsi:type="Query">
                        <source localId="135" alias="c">
                           <expression localId="134" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                        </source>
                        <where localId="147" xsi:type="And">
                           <operand localId="139" xsi:type="Not">
                              <operand xsi:type="IsNull">
                                 <operand localId="138" path="coding" xsi:type="Property">
                                    <source localId="137" path="interpretation" scope="c" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </operand>
                           <operand localId="146" xsi:type="Contains">
                              <operand localId="144" name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                                 <operand localId="143" path="coding" xsi:type="Property">
                                    <source localId="142" path="interpretation" scope="c" xsi:type="Property"/>
                                 </operand>
                              </operand>
                              <operand localId="145" name="Positive" xsi:type="CodeRef"/>
                           </operand>
                        </where>
                     </operand>
                  </then>
                  <else localId="150" valueType="t:Boolean" value="false" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
      </def>
      <def localId="172" name="Orders Before Most Recent Opioid Screening" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="172">
               <a:s>define &quot;Orders Before Most Recent Opioid Screening&quot;:&#xd;
  </a:s>
               <a:s r="171">
                  <a:s>
                     <a:s r="158">
                        <a:s r="157">
                           <a:s>
                              <a:s>Common.&quot;Active Ambulatory Opioid Rx&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> orders</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
      </a:s>
                  <a:s r="168">
                     <a:s>with </a:s>
                     <a:s r="160">
                        <a:s r="159">
                           <a:s>
                              <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> mostRecentScreening</a:s>
                     </a:s>
                     <a:s>&#xd;
        such that </a:s>
                     <a:s r="167">
                        <a:s r="163">
                           <a:s r="162">
                              <a:s r="161">
                                 <a:s>orders</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="162">
                                 <a:s>authoredOn</a:s>
                              </a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="163">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s> &lt; </a:s>
                        <a:s r="166">
                           <a:s r="165">
                              <a:s r="164">
                                 <a:s>mostRecentScreening</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="165">
                                 <a:s>effective</a:s>
                              </a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="166">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
      </a:s>
                  <a:s r="170">
                     <a:s>return&#xd;
        </a:s>
                     <a:s r="169">
                        <a:s>orders</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="171" xsi:type="Query">
            <source localId="158" alias="orders">
               <expression localId="157" name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
            </source>
            <relationship localId="168" alias="mostRecentScreening" xsi:type="With">
               <expression localId="159" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
               <suchThat localId="167" xsi:type="Less">
                  <operand localId="163" path="value" xsi:type="Property">
                     <source localId="162" path="authoredOn" scope="orders" xsi:type="Property"/>
                  </operand>
                  <operand localId="166" path="value" xsi:type="Property">
                     <source localId="165" path="effective" scope="mostRecentScreening" xsi:type="Property"/>
                  </operand>
               </suchThat>
            </relationship>
            <return localId="170">
               <expression localId="169" name="orders" xsi:type="AliasRef"/>
            </return>
         </expression>
      </def>
      <def localId="184" name="Prescribed Opioids" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="184">
               <a:s>define &quot;Prescribed Opioids&quot;:&#xd;
  </a:s>
               <a:s r="183">
                  <a:s>
                     <a:s r="174">
                        <a:s r="173">
                           <a:s>
                              <a:s>&quot;Orders Before Most Recent Opioid Screening&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> orders</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    </a:s>
                  <a:s r="182">
                     <a:s>return </a:s>
                     <a:s r="181">
                        <a:s r="175">
                           <a:s>Common</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="181">
                           <a:s>GetIngredients(</a:s>
                           <a:s r="180">
                              <a:s r="176">
                                 <a:s>Common</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="180">
                                 <a:s>ToCodes(</a:s>
                                 <a:s r="179">
                                    <a:s r="178">
                                       <a:s r="177">
                                          <a:s>orders</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="178">
                                          <a:s>medication</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="179">
                                       <a:s>coding</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="183" xsi:type="Query">
            <source localId="174" alias="orders">
               <expression localId="173" name="Orders Before Most Recent Opioid Screening" xsi:type="ExpressionRef"/>
            </source>
            <return localId="182">
               <expression localId="181" name="GetIngredients" libraryName="Common" xsi:type="FunctionRef">
                  <operand localId="180" name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                     <operand localId="179" path="coding" xsi:type="Property">
                        <source localId="178" path="medication" scope="orders" xsi:type="Property"/>
                     </operand>
                  </operand>
               </expression>
            </return>
         </expression>
      </def>
      <def localId="233" name="GetDrugNameFromScreeningCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="233">
               <a:s>define function GetDrugNameFromScreeningCode(value </a:s>
               <a:s r="198">
                  <a:s>String</a:s>
               </a:s>
               <a:s>):&#xd;
  </a:s>
               <a:s r="232">
                  <a:s r="232">
                     <a:s>if </a:s>
                     <a:s r="200">
                        <a:s r="199">
                           <a:s>value</a:s>
                        </a:s>
                        <a:s> is null</a:s>
                     </a:s>
                     <a:s r="201"> then null&#xd;
  else </a:s>
                     <a:s r="231">
                        <a:s>if </a:s>
                        <a:s r="207">
                           <a:s r="204">
                              <a:s>PositionOf(</a:s>
                              <a:s r="202">
                                 <a:s>'['</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="203">
                                 <a:s>value</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s> = </a:s>
                           <a:s r="206">
                              <a:s r="205">-1</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    then </a:s>
                        <a:s r="222">
                           <a:s>ReplaceMatches(</a:s>
                           <a:s r="219">
                              <a:s r="217">
                                 <a:s>Split(</a:s>
                                 <a:s r="215">
                                    <a:s>ReplaceMatches(</a:s>
                                    <a:s r="212">
                                       <a:s r="210">
                                          <a:s>Split(</a:s>
                                          <a:s r="208">
                                             <a:s>value</a:s>
                                          </a:s>
                                          <a:s>, </a:s>
                                          <a:s r="209">
                                             <a:s>'cutoff'</a:s>
                                          </a:s>
                                          <a:s>)</a:s>
                                       </a:s>
                                       <a:s r="211">[0]</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="213">
                                       <a:s>'\\s'</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="214">
                                       <a:s>''</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="216">
                                    <a:s>'tested'</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="218">[0]</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="220">
                              <a:s>'\\s'</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="221">
                              <a:s>''</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>&#xd;
  else </a:s>
                        <a:s r="230">
                           <a:s>ReplaceMatches(</a:s>
                           <a:s r="227">
                              <a:s r="225">
                                 <a:s>Split(</a:s>
                                 <a:s r="223">
                                    <a:s>value</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="224">
                                    <a:s>'\\['</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="226">[0]</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="228">
                              <a:s>'\\s'</a:s>
                           </a:s>
                           <a:s>, </a:s>
                           <a:s r="229">
                              <a:s>''</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="232" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="200" xsi:type="IsNull">
                  <operand localId="199" name="value" xsi:type="OperandRef"/>
               </operand>
            </condition>
            <then asType="t:String" xsi:type="As">
               <operand localId="201" xsi:type="Null"/>
            </then>
            <else localId="231" xsi:type="If">
               <condition asType="t:Boolean" xsi:type="As">
                  <operand localId="207" xsi:type="Equal">
                     <operand localId="204" xsi:type="PositionOf">
                        <pattern localId="202" valueType="t:String" value="[" xsi:type="Literal"/>
                        <string localId="203" name="value" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="206" xsi:type="Negate">
                        <operand localId="205" valueType="t:Integer" value="1" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </condition>
               <then localId="222" xsi:type="ReplaceMatches">
                  <operand localId="219" xsi:type="Indexer">
                     <operand localId="217" xsi:type="Split">
                        <stringToSplit localId="215" xsi:type="ReplaceMatches">
                           <operand localId="212" xsi:type="Indexer">
                              <operand localId="210" xsi:type="Split">
                                 <stringToSplit localId="208" name="value" xsi:type="OperandRef"/>
                                 <separator localId="209" valueType="t:String" value="cutoff" xsi:type="Literal"/>
                              </operand>
                              <operand localId="211" valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                           <operand localId="213" valueType="t:String" value="\s" xsi:type="Literal"/>
                           <operand localId="214" valueType="t:String" value="" xsi:type="Literal"/>
                        </stringToSplit>
                        <separator localId="216" valueType="t:String" value="tested" xsi:type="Literal"/>
                     </operand>
                     <operand localId="218" valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </operand>
                  <operand localId="220" valueType="t:String" value="\s" xsi:type="Literal"/>
                  <operand localId="221" valueType="t:String" value="" xsi:type="Literal"/>
               </then>
               <else localId="230" xsi:type="ReplaceMatches">
                  <operand localId="227" xsi:type="Indexer">
                     <operand localId="225" xsi:type="Split">
                        <stringToSplit localId="223" name="value" xsi:type="OperandRef"/>
                        <separator localId="224" valueType="t:String" value="\[" xsi:type="Literal"/>
                     </operand>
                     <operand localId="226" valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </operand>
                  <operand localId="228" valueType="t:String" value="\s" xsi:type="Literal"/>
                  <operand localId="229" valueType="t:String" value="" xsi:type="Literal"/>
               </else>
            </else>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="198" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="237" name="GetDrugNamesFromScreeningCodes" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="237">
               <a:s>define function GetDrugNamesFromScreeningCodes(value </a:s>
               <a:s r="192">
                  <a:s>List&lt;</a:s>
                  <a:s r="191">
                     <a:s>FHIR.Coding</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):&#xd;
  </a:s>
               <a:s r="236">
                  <a:s r="236">
                     <a:s>
                        <a:s r="194">
                           <a:s r="193">
                              <a:s>
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s> v</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="235">
                        <a:s>return </a:s>
                        <a:s r="234">
                           <a:s>GetDrugNameFromScreeningCode(</a:s>
                           <a:s r="197">
                              <a:s r="196">
                                 <a:s r="195">
                                    <a:s>v</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="196">
                                    <a:s>display</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="197">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="236" xsi:type="Query">
            <source localId="194" alias="v">
               <expression localId="193" name="value" xsi:type="OperandRef"/>
            </source>
            <return localId="235">
               <expression localId="234" name="GetDrugNameFromScreeningCode" xsi:type="FunctionRef">
                  <operand localId="197" path="value" xsi:type="Property">
                     <source localId="196" path="display" scope="v" xsi:type="Property"/>
                  </operand>
               </expression>
            </return>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="192" xsi:type="ListTypeSpecifier">
               <elementType localId="191" name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="260" name="Missing Opioids" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="260">
               <a:s>define &quot;Missing Opioids&quot;:&#xd;
  </a:s>
               <a:s r="259">
                  <a:s>if </a:s>
                  <a:s r="156">
                     <a:s r="155">
                        <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                     </a:s>
                     <a:s> is not null</a:s>
                  </a:s>
                  <a:s>&#xd;
  then&#xd;
    </a:s>
                  <a:s r="257">
                     <a:s r="239">
                        <a:s r="187">
                           <a:s>
                              <a:s r="186">
                                 <a:s r="185">
                                    <a:s>
                                       <a:s>&quot;Prescribed Opioids&quot;</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> Prescriptions</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      except&#xd;
        </a:s>
                        <a:s r="238">
                           <a:s>GetDrugNamesFromScreeningCodes(</a:s>
                           <a:s r="190">
                              <a:s r="189">
                                 <a:s r="188">
                                    <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="189">
                                    <a:s>code</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="190">
                                 <a:s>coding</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
          union </a:s>
                     <a:s r="256">
                        <a:s>(&#xd;
            </a:s>
                        <a:s r="256">
                           <a:s>if </a:s>
                           <a:s r="246">
                              <a:s r="242">
                                 <a:s r="241">
                                    <a:s r="240">
                                       <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="241">
                                       <a:s>component</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                              <a:s> and </a:s>
                              <a:s r="245">
                                 <a:s>exists</a:s>
                                 <a:s r="244">
                                    <a:s>(</a:s>
                                    <a:s r="244">
                                       <a:s r="243">
                                          <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="244">
                                          <a:s>component</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
              then </a:s>
                           <a:s r="254">
                              <a:s>
                                 <a:s r="248">
                                    <a:s r="247">
                                       <a:s>
                                          <a:s>&quot;Positive Opioid Drug Screening&quot;.component</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> pds</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> </a:s>
                              <a:s r="253">
                                 <a:s>return </a:s>
                                 <a:s r="252">
                                    <a:s>GetDrugNamesFromScreeningCodes(</a:s>
                                    <a:s r="251">
                                       <a:s r="250">
                                          <a:s r="249">
                                             <a:s>pds</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="250">
                                             <a:s>code</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="251">
                                          <a:s>coding</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s r="255">&#xd;
            else {}</a:s>
                        </a:s>
                        <a:s>&#xd;
          )</a:s>
                     </a:s>
                  </a:s>
                  <a:s r="258">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="259" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="156" xsi:type="Not">
                  <operand xsi:type="IsNull">
                     <operand localId="155" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
            </condition>
            <then localId="257" xsi:type="Union">
               <operand localId="239" xsi:type="Except">
                  <operand xsi:type="As">
                     <operand localId="187" xsi:type="Query">
                        <source localId="186" alias="Prescriptions">
                           <expression localId="185" name="Prescribed Opioids" xsi:type="ExpressionRef"/>
                        </source>
                     </operand>
                     <asTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="ChoiceTypeSpecifier">
                           <choice xsi:type="ListTypeSpecifier">
                              <elementType xsi:type="ListTypeSpecifier">
                                 <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
                              </elementType>
                           </choice>
                           <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </asTypeSpecifier>
                  </operand>
                  <operand xsi:type="As">
                     <operand localId="238" name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                        <operand localId="190" path="coding" xsi:type="Property">
                           <source localId="189" path="code" xsi:type="Property">
                              <source localId="188" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                           </source>
                        </operand>
                     </operand>
                     <asTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="ChoiceTypeSpecifier">
                           <choice xsi:type="ListTypeSpecifier">
                              <elementType xsi:type="ListTypeSpecifier">
                                 <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
                              </elementType>
                           </choice>
                           <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </asTypeSpecifier>
                  </operand>
               </operand>
               <operand xsi:type="Query">
                  <source alias="X">
                     <expression localId="256" xsi:type="If">
                        <condition asType="t:Boolean" xsi:type="As">
                           <operand localId="246" xsi:type="And">
                              <operand localId="242" xsi:type="Not">
                                 <operand xsi:type="IsNull">
                                    <operand localId="241" path="component" xsi:type="Property">
                                       <source localId="240" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                                    </operand>
                                 </operand>
                              </operand>
                              <operand localId="245" xsi:type="Exists">
                                 <operand localId="244" path="component" xsi:type="Property">
                                    <source localId="243" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                                 </operand>
                              </operand>
                           </operand>
                        </condition>
                        <then localId="254" xsi:type="Query">
                           <source localId="248" alias="pds">
                              <expression localId="247" path="component" xsi:type="Property">
                                 <source name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
                              </expression>
                           </source>
                           <return localId="253">
                              <expression localId="252" name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                                 <operand localId="251" path="coding" xsi:type="Property">
                                    <source localId="250" path="code" scope="pds" xsi:type="Property"/>
                                 </operand>
                              </expression>
                           </return>
                        </then>
                        <else localId="255" xsi:type="List"/>
                     </expression>
                  </source>
                  <return distinct="false">
                     <expression xsi:type="As">
                        <operand name="X" xsi:type="AliasRef"/>
                        <asTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice xsi:type="ListTypeSpecifier">
                              <elementType xsi:type="ListTypeSpecifier">
                                 <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
                              </elementType>
                           </choice>
                           <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </expression>
                  </return>
               </operand>
            </then>
            <else xsi:type="As">
               <operand localId="258" xsi:type="Null"/>
               <asTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="ListTypeSpecifier">
                           <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </choice>
                     <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </asTypeSpecifier>
            </else>
         </expression>
      </def>
      <def localId="263" name="Has Missing Opioids?" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="263">
               <a:s>define &quot;Has Missing Opioids?&quot;:&#xd;
  </a:s>
               <a:s r="262">
                  <a:s>exists </a:s>
                  <a:s r="261">
                     <a:s>(</a:s>
                     <a:s r="261">
                        <a:s>&quot;Missing Opioids&quot;</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="262" xsi:type="Exists">
            <operand localId="261" name="Missing Opioids" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="292" name="Opioids From Most Recent Screening" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="292">
               <a:s>define &quot;Opioids From Most Recent Screening&quot;:&#xd;
  </a:s>
               <a:s r="291">
                  <a:s>
                     <a:s r="267">
                        <a:s r="266">
                           <a:s>
                              <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> mostRecentScreening</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    </a:s>
                  <a:s r="290">
                     <a:s>return&#xd;
      </a:s>
                     <a:s r="289">
                        <a:s r="271">
                           <a:s>GetDrugNamesFromScreeningCodes(</a:s>
                           <a:s r="270">
                              <a:s r="269">
                                 <a:s r="268">
                                    <a:s>mostRecentScreening</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="269">
                                    <a:s>code</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="270">
                                 <a:s>coding</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>&#xd;
        union </a:s>
                        <a:s r="288">
                           <a:s>(&#xd;
          </a:s>
                           <a:s r="288">
                              <a:s>if </a:s>
                              <a:s r="278">
                                 <a:s r="274">
                                    <a:s r="273">
                                       <a:s r="272">
                                          <a:s>mostRecentScreening</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="273">
                                          <a:s>component</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="277">
                                    <a:s>exists</a:s>
                                    <a:s r="276">
                                       <a:s>(</a:s>
                                       <a:s r="276">
                                          <a:s r="275">
                                             <a:s>mostRecentScreening</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="276">
                                             <a:s>component</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>&#xd;
            then </a:s>
                              <a:s r="286">
                                 <a:s>
                                    <a:s r="280">
                                       <a:s r="279">
                                          <a:s>
                                             <a:s>mostRecentScreening.component</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> pis</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> </a:s>
                                 <a:s r="285">
                                    <a:s>return </a:s>
                                    <a:s r="284">
                                       <a:s>GetDrugNamesFromScreeningCodes(</a:s>
                                       <a:s r="283">
                                          <a:s r="282">
                                             <a:s r="281">
                                                <a:s>pis</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="282">
                                                <a:s>code</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="283">
                                             <a:s>coding</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="287">&#xd;
          else {}</a:s>
                           </a:s>
                           <a:s>&#xd;
        )</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="291" xsi:type="Query">
            <source localId="267" alias="mostRecentScreening">
               <expression localId="266" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
            </source>
            <return localId="290">
               <expression localId="289" xsi:type="Union">
                  <operand localId="271" name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                     <operand localId="270" path="coding" xsi:type="Property">
                        <source localId="269" path="code" scope="mostRecentScreening" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand xsi:type="Query">
                     <source alias="X">
                        <expression localId="288" xsi:type="If">
                           <condition asType="t:Boolean" xsi:type="As">
                              <operand localId="278" xsi:type="And">
                                 <operand localId="274" xsi:type="Not">
                                    <operand xsi:type="IsNull">
                                       <operand localId="273" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                                    </operand>
                                 </operand>
                                 <operand localId="277" xsi:type="Exists">
                                    <operand localId="276" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </condition>
                           <then localId="286" xsi:type="Query">
                              <source localId="280" alias="pis">
                                 <expression localId="279" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                              </source>
                              <return localId="285">
                                 <expression localId="284" name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                                    <operand localId="283" path="coding" xsi:type="Property">
                                       <source localId="282" path="code" scope="pis" xsi:type="Property"/>
                                    </operand>
                                 </expression>
                              </return>
                           </then>
                           <else localId="287" xsi:type="List"/>
                        </expression>
                     </source>
                     <return distinct="false">
                        <expression asType="t:String" xsi:type="As">
                           <operand name="X" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </operand>
               </expression>
            </return>
         </expression>
      </def>
      <def localId="296" name="Unprescribed Opioids" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="296">
               <a:s>define &quot;Unprescribed Opioids&quot;:&#xd;
  </a:s>
               <a:s r="295">
                  <a:s r="293">
                     <a:s>&quot;Opioids From Most Recent Screening&quot;</a:s>
                  </a:s>
                  <a:s> except </a:s>
                  <a:s r="294">
                     <a:s>&quot;Prescribed Opioids&quot;</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="295" xsi:type="Except">
            <operand xsi:type="As">
               <operand localId="293" name="Opioids From Most Recent Screening" xsi:type="ExpressionRef"/>
               <asTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="ListTypeSpecifier">
                           <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </choice>
                     <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </asTypeSpecifier>
            </operand>
            <operand xsi:type="As">
               <operand localId="294" name="Prescribed Opioids" xsi:type="ExpressionRef"/>
               <asTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="ListTypeSpecifier">
                           <elementType name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </choice>
                     <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </asTypeSpecifier>
            </operand>
         </expression>
      </def>
      <def localId="299" name="Has Unprescribed Opioids?" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="299">
               <a:s>define &quot;Has Unprescribed Opioids?&quot;:&#xd;
  </a:s>
               <a:s r="298">
                  <a:s>exists </a:s>
                  <a:s r="297">
                     <a:s>(</a:s>
                     <a:s r="297">
                        <a:s>&quot;Unprescribed Opioids&quot;</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="298" xsi:type="Exists">
            <operand localId="297" name="Unprescribed Opioids" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="338" name="Positive Illicit Drug Screening" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="338">
               <a:s>define &quot;Positive Illicit Drug Screening&quot;:&#xd;
  </a:s>
               <a:s r="337">
                  <a:s>
                     <a:s r="303">
                        <a:s r="302">
                           <a:s>
                              <a:s>&quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> mostRecentScreening</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    </a:s>
                  <a:s r="336">
                     <a:s>where </a:s>
                     <a:s r="336">
                        <a:s r="310">
                           <a:s r="308">
                              <a:s r="304">
                                 <a:s>Common</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="308">
                                 <a:s>ToCodes(</a:s>
                                 <a:s r="307">
                                    <a:s r="306">
                                       <a:s r="305">
                                          <a:s>mostRecentScreening</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="306">
                                          <a:s>interpretation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="307">
                                       <a:s>coding</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> contains </a:s>
                           <a:s r="309">
                              <a:s>&quot;Positive&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      or&#xd;
      </a:s>
                        <a:s r="335">
                           <a:s>(&#xd;
          </a:s>
                           <a:s r="335">
                              <a:s>if </a:s>
                              <a:s r="317">
                                 <a:s r="313">
                                    <a:s r="312">
                                       <a:s r="311">
                                          <a:s>mostRecentScreening</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="312">
                                          <a:s>component</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="316">
                                    <a:s>exists</a:s>
                                    <a:s r="315">
                                       <a:s>(</a:s>
                                       <a:s r="315">
                                          <a:s r="314">
                                             <a:s>mostRecentScreening</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="315">
                                             <a:s>component</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>&#xd;
            then&#xd;
              </a:s>
                              <a:s r="333">
                                 <a:s>exists </a:s>
                                 <a:s r="332">
                                    <a:s>(</a:s>
                                    <a:s r="332">
                                       <a:s>
                                          <a:s r="319">
                                             <a:s r="318">
                                                <a:s>
                                                   <a:s>mostRecentScreening.component</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> c</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>&#xd;
                </a:s>
                                       <a:s r="331">
                                          <a:s>where </a:s>
                                          <a:s r="331">
                                             <a:s r="323">
                                                <a:s r="322">
                                                   <a:s r="321">
                                                      <a:s r="320">
                                                         <a:s>c</a:s>
                                                      </a:s>
                                                      <a:s>.</a:s>
                                                      <a:s r="321">
                                                         <a:s>interpretation</a:s>
                                                      </a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="322">
                                                      <a:s>coding</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> is not null</a:s>
                                             </a:s>
                                             <a:s> and&#xd;
                  </a:s>
                                             <a:s r="330">
                                                <a:s r="328">
                                                   <a:s r="324">
                                                      <a:s>Common</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="328">
                                                      <a:s>ToCodes(</a:s>
                                                      <a:s r="327">
                                                         <a:s r="326">
                                                            <a:s r="325">
                                                               <a:s>c</a:s>
                                                            </a:s>
                                                            <a:s>.</a:s>
                                                            <a:s r="326">
                                                               <a:s>interpretation</a:s>
                                                            </a:s>
                                                         </a:s>
                                                         <a:s>.</a:s>
                                                         <a:s r="327">
                                                            <a:s>coding</a:s>
                                                         </a:s>
                                                      </a:s>
                                                      <a:s>)</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> contains </a:s>
                                                <a:s r="329">
                                                   <a:s>&quot;Positive&quot;</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="334">&#xd;
            else false</a:s>
                           </a:s>
                           <a:s>&#xd;
      )</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="337" xsi:type="Query">
            <source localId="303" alias="mostRecentScreening">
               <expression localId="302" name="Most Recent Illicit Drug Urine Screenings in Last 12 Months" xsi:type="ExpressionRef"/>
            </source>
            <where localId="336" xsi:type="Or">
               <operand localId="310" xsi:type="Contains">
                  <operand localId="308" name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                     <operand localId="307" path="coding" xsi:type="Property">
                        <source localId="306" path="interpretation" scope="mostRecentScreening" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand localId="309" name="Positive" xsi:type="CodeRef"/>
               </operand>
               <operand localId="335" xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand localId="317" xsi:type="And">
                        <operand localId="313" xsi:type="Not">
                           <operand xsi:type="IsNull">
                              <operand localId="312" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                           </operand>
                        </operand>
                        <operand localId="316" xsi:type="Exists">
                           <operand localId="315" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                        </operand>
                     </operand>
                  </condition>
                  <then localId="333" xsi:type="Exists">
                     <operand localId="332" xsi:type="Query">
                        <source localId="319" alias="c">
                           <expression localId="318" path="component" scope="mostRecentScreening" xsi:type="Property"/>
                        </source>
                        <where localId="331" xsi:type="And">
                           <operand localId="323" xsi:type="Not">
                              <operand xsi:type="IsNull">
                                 <operand localId="322" path="coding" xsi:type="Property">
                                    <source localId="321" path="interpretation" scope="c" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </operand>
                           <operand localId="330" xsi:type="Contains">
                              <operand localId="328" name="ToCodes" libraryName="Common" xsi:type="FunctionRef">
                                 <operand localId="327" path="coding" xsi:type="Property">
                                    <source localId="326" path="interpretation" scope="c" xsi:type="Property"/>
                                 </operand>
                              </operand>
                              <operand localId="329" name="Positive" xsi:type="CodeRef"/>
                           </operand>
                        </where>
                     </operand>
                  </then>
                  <else localId="334" valueType="t:Boolean" value="false" xsi:type="Literal"/>
               </operand>
            </where>
         </expression>
      </def>
      <def localId="341" name="Has Illicit Drugs in Screening?" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="341">
               <a:s>define &quot;Has Illicit Drugs in Screening?&quot;:&#xd;
  </a:s>
               <a:s r="340">
                  <a:s r="339">
                     <a:s>&quot;Positive Illicit Drug Screening&quot;</a:s>
                  </a:s>
                  <a:s> is not null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="340" xsi:type="Not">
            <operand xsi:type="IsNull">
               <operand localId="339" name="Positive Illicit Drug Screening" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="345" name="Inclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="345">
               <a:s>define &quot;Inclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="344">
                  <a:s r="52">
                     <a:s r="44">
                        <a:s r="34">
                           <a:s r="32">
                              <a:s r="30">
                                 <a:s>AgeInYears()</a:s>
                              </a:s>
                              <a:s r="31"> >= 18</a:s>
                           </a:s>
                           <a:s>&#xd;
    and </a:s>
                           <a:s r="33">
                              <a:s>&quot;Validate Trigger Event&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    and </a:s>
                        <a:s r="43">
                           <a:s>not </a:s>
                           <a:s r="42">
                              <a:s>&quot;Exclusion Criteria&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    and </a:s>
                     <a:s r="51">
                        <a:s>AnyTrue(</a:s>
                        <a:s r="50">
                           <a:s r="45">
                              <a:s>Common</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="50">
                              <a:s>ProbableDaysInRange(</a:s>
                              <a:s r="47">
                                 <a:s r="46">
                                    <a:s>Common</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="47">
                                    <a:s>&quot;Active Ambulatory Opioid Rx&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="48">, 90, 80)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    and&#xd;
      </a:s>
                  <a:s r="343">
                     <a:s>(</a:s>
                     <a:s r="343">
                        <a:s r="301">
                           <a:s r="265">
                              <a:s r="117">
                                 <a:s>&quot;No Urine Screening In Last 12 Months&quot;</a:s>
                              </a:s>
                              <a:s>&#xd;
        or </a:s>
                              <a:s r="264">
                                 <a:s>&quot;Has Missing Opioids?&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
        or </a:s>
                           <a:s r="300">
                              <a:s>&quot;Has Unprescribed Opioids?&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
        or </a:s>
                        <a:s r="342">
                           <a:s>&quot;Has Illicit Drugs in Screening?&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="344" xsi:type="And">
            <operand localId="52" xsi:type="And">
               <operand localId="44" xsi:type="And">
                  <operand localId="34" xsi:type="And">
                     <operand localId="32" xsi:type="GreaterOrEqual">
                        <operand localId="30" precision="Year" xsi:type="CalculateAge">
                           <operand path="birthDate.value" xsi:type="Property">
                              <source name="Patient" xsi:type="ExpressionRef"/>
                           </operand>
                        </operand>
                        <operand localId="31" valueType="t:Integer" value="18" xsi:type="Literal"/>
                     </operand>
                     <operand localId="33" name="Validate Trigger Event" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand localId="43" xsi:type="Not">
                     <operand localId="42" name="Exclusion Criteria" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
               <operand localId="51" xsi:type="AnyTrue">
                  <source localId="50" name="ProbableDaysInRange" libraryName="Common" xsi:type="FunctionRef">
                     <operand localId="47" name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
                     <operand localId="48" valueType="t:Integer" value="90" xsi:type="Literal"/>
                     <operand localId="49" valueType="t:Integer" value="80" xsi:type="Literal"/>
                  </source>
               </operand>
            </operand>
            <operand localId="343" xsi:type="Or">
               <operand localId="301" xsi:type="Or">
                  <operand localId="265" xsi:type="Or">
                     <operand localId="117" name="No Urine Screening In Last 12 Months" xsi:type="ExpressionRef"/>
                     <operand localId="264" name="Has Missing Opioids?" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand localId="300" name="Has Unprescribed Opioids?" xsi:type="ExpressionRef"/>
               </operand>
               <operand localId="342" name="Has Illicit Drugs in Screening?" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="348" name="Has Opioids in Screening?" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="348">
               <a:s>define &quot;Has Opioids in Screening?&quot;:&#xd;
  </a:s>
               <a:s r="347">
                  <a:s r="346">
                     <a:s>&quot;Positive Opioid Drug Screening&quot;</a:s>
                  </a:s>
                  <a:s> is not null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="347" xsi:type="Not">
            <operand xsi:type="IsNull">
               <operand localId="346" name="Positive Opioid Drug Screening" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="353" name="No Screening In Last 12 Months Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="353">
               <a:s>define &quot;No Screening In Last 12 Months Indicator&quot;:&#xd;
  </a:s>
               <a:s r="352">
                  <a:s>if </a:s>
                  <a:s r="349">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="350">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="351">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="352" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="349" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="350" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="351" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="358" name="Missing Opioids Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="358">
               <a:s>define &quot;Missing Opioids Indicator&quot;:&#xd;
  </a:s>
               <a:s r="357">
                  <a:s>if </a:s>
                  <a:s r="354">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="355">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="356">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="357" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="354" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="355" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="356" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="363" name="Unprescribed Opioids Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="363">
               <a:s>define &quot;Unprescribed Opioids Indicator&quot;:&#xd;
  </a:s>
               <a:s r="362">
                  <a:s>if </a:s>
                  <a:s r="359">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="360">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="361">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="362" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="359" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="360" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="361" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="368" name="Illicit Drugs Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="368">
               <a:s>define &quot;Illicit Drugs Indicator&quot;:&#xd;
  </a:s>
               <a:s r="367">
                  <a:s>if </a:s>
                  <a:s r="364">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="365">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="366">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="367" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="364" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="365" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="366" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="375" name="No Screening In Last 12 Months Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="375">
               <a:s>define &quot;No Screening In Last 12 Months Summary&quot;:&#xd;
  </a:s>
               <a:s r="374">
                  <a:s>if </a:s>
                  <a:s r="371">
                     <a:s r="369">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="370">
                        <a:s>&quot;No Urine Screening In Last 12 Months&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="372">
                     <a:s>'Annual Urine Screening Check'</a:s>
                  </a:s>
                  <a:s r="373">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="374" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="371" xsi:type="And">
                  <operand localId="369" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="370" name="No Urine Screening In Last 12 Months" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="372" valueType="t:String" value="Annual Urine Screening Check" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="373" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="382" name="Missing Opioids Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="382">
               <a:s>define &quot;Missing Opioids Summary&quot;:&#xd;
  </a:s>
               <a:s r="381">
                  <a:s>if </a:s>
                  <a:s r="378">
                     <a:s r="376">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="377">
                        <a:s>&quot;Has Missing Opioids?&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="379">
                     <a:s>'Prescribed Opioids Not Found In Urine Screening'</a:s>
                  </a:s>
                  <a:s r="380">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="381" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="378" xsi:type="And">
                  <operand localId="376" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="377" name="Has Missing Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="379" valueType="t:String" value="Prescribed Opioids Not Found In Urine Screening" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="380" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="389" name="Unprescribed Opioids Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="389">
               <a:s>define &quot;Unprescribed Opioids Summary&quot;:&#xd;
  </a:s>
               <a:s r="388">
                  <a:s>if </a:s>
                  <a:s r="385">
                     <a:s r="383">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="384">
                        <a:s>&quot;Has Unprescribed Opioids?&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="386">
                     <a:s>'Unprescribed Opioids Found In Urine Screening'</a:s>
                  </a:s>
                  <a:s r="387">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="388" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="385" xsi:type="And">
                  <operand localId="383" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="384" name="Has Unprescribed Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="386" valueType="t:String" value="Unprescribed Opioids Found In Urine Screening" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="387" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="396" name="Illicit Drugs Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="396">
               <a:s>define &quot;Illicit Drugs Summary&quot;:&#xd;
  </a:s>
               <a:s r="395">
                  <a:s>if </a:s>
                  <a:s r="392">
                     <a:s r="390">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="391">
                        <a:s>&quot;Has Illicit Drugs in Screening?&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="393">
                     <a:s>'Illicit Drugs Found In Urine Screening'</a:s>
                  </a:s>
                  <a:s r="394">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="395" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="392" xsi:type="And">
                  <operand localId="390" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="391" name="Has Illicit Drugs in Screening?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="393" valueType="t:String" value="Illicit Drugs Found In Urine Screening" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="394" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="403" name="No Screening In Last 12 Months Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="403">
               <a:s>define &quot;No Screening In Last 12 Months Detail&quot;:&#xd;
  </a:s>
               <a:s r="402">
                  <a:s>if </a:s>
                  <a:s r="399">
                     <a:s r="397">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="398">
                        <a:s>&quot;No Urine Screening In Last 12 Months&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="400">
                     <a:s>'Patients on opioid therapy should have a urine drug test performed every 12 months.'</a:s>
                  </a:s>
                  <a:s r="401">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="402" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="399" xsi:type="And">
                  <operand localId="397" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="398" name="No Urine Screening In Last 12 Months" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="400" valueType="t:String" value="Patients on opioid therapy should have a urine drug test performed every 12 months." xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="401" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="414" name="Missing Opioids Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="414">
               <a:s>define &quot;Missing Opioids Detail&quot;:&#xd;
  </a:s>
               <a:s r="413">
                  <a:s>if </a:s>
                  <a:s r="406">
                     <a:s r="404">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="405">
                        <a:s>&quot;Has Missing Opioids?&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then&#xd;
      </a:s>
                  <a:s r="411">
                     <a:s r="407">
                        <a:s>'The following opioids are missing from the screening: '</a:s>
                     </a:s>
                     <a:s> + </a:s>
                     <a:s r="410">
                        <a:s>Combine(</a:s>
                        <a:s r="408">
                           <a:s>&quot;Missing Opioids&quot;</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="409">
                           <a:s>', '</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
                  <a:s r="412">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="413" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="406" xsi:type="And">
                  <operand localId="404" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="405" name="Has Missing Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="411" xsi:type="Concatenate">
               <operand localId="407" valueType="t:String" value="The following opioids are missing from the screening: " xsi:type="Literal"/>
               <operand localId="410" xsi:type="Combine">
                  <source xsi:type="Query">
                     <source alias="X">
                        <expression localId="408" name="Missing Opioids" xsi:type="ExpressionRef"/>
                     </source>
                     <return distinct="false">
                        <expression asType="t:String" xsi:type="As">
                           <operand name="X" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </source>
                  <separator localId="409" valueType="t:String" value=", " xsi:type="Literal"/>
               </operand>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand localId="412" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="425" name="Unprescribed Opioids Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="425">
               <a:s>define &quot;Unprescribed Opioids Detail&quot;:&#xd;
  </a:s>
               <a:s r="424">
                  <a:s>if </a:s>
                  <a:s r="417">
                     <a:s r="415">
                        <a:s>&quot;Inclusion Criteria&quot;</a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="416">
                        <a:s>&quot;Has Unprescribed Opioids?&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    then&#xd;
      </a:s>
                  <a:s r="422">
                     <a:s r="418">
                        <a:s>'Found the following unprescribed opioid(s): '</a:s>
                     </a:s>
                     <a:s> + </a:s>
                     <a:s r="421">
                        <a:s>Combine(</a:s>
                        <a:s r="419">
                           <a:s>&quot;Unprescribed Opioids&quot;</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="420">
                           <a:s>', '</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
                  <a:s r="423">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="424" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="417" xsi:type="And">
                  <operand localId="415" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                  <operand localId="416" name="Has Unprescribed Opioids?" xsi:type="ExpressionRef"/>
               </operand>
            </condition>
            <then localId="422" xsi:type="Concatenate">
               <operand localId="418" valueType="t:String" value="Found the following unprescribed opioid(s): " xsi:type="Literal"/>
               <operand localId="421" xsi:type="Combine">
                  <source xsi:type="Query">
                     <source alias="X">
                        <expression localId="419" name="Unprescribed Opioids" xsi:type="ExpressionRef"/>
                     </source>
                     <return distinct="false">
                        <expression asType="t:String" xsi:type="As">
                           <operand name="X" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </source>
                  <separator localId="420" valueType="t:String" value=", " xsi:type="Literal"/>
               </operand>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand localId="423" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="469" name="Illicit Drugs Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="469">
               <a:s>define &quot;Illicit Drugs Detail&quot;:&#xd;
  </a:s>
               <a:s r="468">
                  <a:s>
                     <a:s r="427">
                        <a:s r="426">
                           <a:s>
                              <a:s>&quot;Positive Illicit Drug Screening&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> positiveIllicitDrugScreening</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
  </a:s>
                  <a:s>
                     <a:s>let </a:s>
                     <a:s r="432">
                        <a:s>illicitDrugs: </a:s>
                        <a:s r="431">
                           <a:s>GetDrugNamesFromScreeningCodes(</a:s>
                           <a:s r="430">
                              <a:s r="429">
                                 <a:s r="428">
                                    <a:s>positiveIllicitDrugScreening</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="429">
                                    <a:s>code</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="430">
                                 <a:s>coding</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
  </a:s>
                  <a:s r="467">
                     <a:s>return&#xd;
    </a:s>
                     <a:s r="466">
                        <a:s>if </a:s>
                        <a:s r="435">
                           <a:s r="433">
                              <a:s>&quot;Inclusion Criteria&quot;</a:s>
                           </a:s>
                           <a:s> and </a:s>
                           <a:s r="434">
                              <a:s>&quot;Has Illicit Drugs in Screening?&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      then&#xd;
        </a:s>
                        <a:s r="464">
                           <a:s r="436">
                              <a:s>'Found the following illicit drug(s) in urine drug screen: '</a:s>
                           </a:s>
                           <a:s> +&#xd;
        </a:s>
                           <a:s r="463">
                              <a:s>(&#xd;
          </a:s>
                              <a:s r="463">
                                 <a:s>if </a:s>
                                 <a:s r="438">
                                    <a:s r="437">
                                       <a:s>illicitDrugs</a:s>
                                    </a:s>
                                    <a:s> is null</a:s>
                                 </a:s>
                                 <a:s>&#xd;
            then </a:s>
                                 <a:s r="459">
                                    <a:s>if </a:s>
                                    <a:s r="446">
                                       <a:s r="441">
                                          <a:s r="440">
                                             <a:s r="439">
                                                <a:s>positiveIllicitDrugScreening</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="440">
                                                <a:s>component</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> is null</a:s>
                                       </a:s>
                                       <a:s> or </a:s>
                                       <a:s r="445">
                                          <a:s>not </a:s>
                                          <a:s r="444">
                                             <a:s>exists</a:s>
                                             <a:s r="443">
                                                <a:s>(</a:s>
                                                <a:s r="443">
                                                   <a:s r="442">
                                                      <a:s>positiveIllicitDrugScreening</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="443">
                                                      <a:s>component</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>)</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>&#xd;
              then </a:s>
                                    <a:s r="447">
                                       <a:s>'could not determine the drug name'</a:s>
                                    </a:s>
                                    <a:s>&#xd;
              else </a:s>
                                    <a:s r="458">
                                       <a:s>Combine(</a:s>
                                       <a:s r="456">
                                          <a:s>flatten </a:s>
                                          <a:s r="455">
                                             <a:s>(</a:s>
                                             <a:s r="455">
                                                <a:s>
                                                   <a:s r="449">
                                                      <a:s r="448">
                                                         <a:s>
                                                            <a:s>positiveIllicitDrugScreening.component</a:s>
                                                         </a:s>
                                                      </a:s>
                                                      <a:s> pis</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> </a:s>
                                                <a:s r="454">
                                                   <a:s>return </a:s>
                                                   <a:s r="453">
                                                      <a:s>GetDrugNamesFromScreeningCodes(</a:s>
                                                      <a:s r="452">
                                                         <a:s r="451">
                                                            <a:s r="450">
                                                               <a:s>pis</a:s>
                                                            </a:s>
                                                            <a:s>.</a:s>
                                                            <a:s r="451">
                                                               <a:s>code</a:s>
                                                            </a:s>
                                                         </a:s>
                                                         <a:s>.</a:s>
                                                         <a:s r="452">
                                                            <a:s>coding</a:s>
                                                         </a:s>
                                                      </a:s>
                                                      <a:s>)</a:s>
                                                   </a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>, </a:s>
                                       <a:s r="457">
                                          <a:s>', '</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
          else </a:s>
                                 <a:s r="462">
                                    <a:s>Combine(</a:s>
                                    <a:s r="460">
                                       <a:s>illicitDrugs</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="461">
                                       <a:s>', '</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>&#xd;
        )</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="465">&#xd;
    else null</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="468" xsi:type="Query">
            <source localId="427" alias="positiveIllicitDrugScreening">
               <expression localId="426" name="Positive Illicit Drug Screening" xsi:type="ExpressionRef"/>
            </source>
            <let localId="432" identifier="illicitDrugs">
               <expression localId="431" name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                  <operand localId="430" path="coding" xsi:type="Property">
                     <source localId="429" path="code" scope="positiveIllicitDrugScreening" xsi:type="Property"/>
                  </operand>
               </expression>
            </let>
            <return localId="467">
               <expression localId="466" xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand localId="435" xsi:type="And">
                        <operand localId="433" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
                        <operand localId="434" name="Has Illicit Drugs in Screening?" xsi:type="ExpressionRef"/>
                     </operand>
                  </condition>
                  <then localId="464" xsi:type="Concatenate">
                     <operand localId="436" valueType="t:String" value="Found the following illicit drug(s) in urine drug screen: " xsi:type="Literal"/>
                     <operand localId="463" xsi:type="If">
                        <condition asType="t:Boolean" xsi:type="As">
                           <operand localId="438" xsi:type="IsNull">
                              <operand localId="437" name="illicitDrugs" xsi:type="QueryLetRef"/>
                           </operand>
                        </condition>
                        <then localId="459" xsi:type="If">
                           <condition asType="t:Boolean" xsi:type="As">
                              <operand localId="446" xsi:type="Or">
                                 <operand localId="441" xsi:type="IsNull">
                                    <operand localId="440" path="component" scope="positiveIllicitDrugScreening" xsi:type="Property"/>
                                 </operand>
                                 <operand localId="445" xsi:type="Not">
                                    <operand localId="444" xsi:type="Exists">
                                       <operand localId="443" path="component" scope="positiveIllicitDrugScreening" xsi:type="Property"/>
                                    </operand>
                                 </operand>
                              </operand>
                           </condition>
                           <then localId="447" valueType="t:String" value="could not determine the drug name" xsi:type="Literal"/>
                           <else localId="458" xsi:type="Combine">
                              <source localId="456" xsi:type="Flatten">
                                 <operand localId="455" xsi:type="Query">
                                    <source localId="449" alias="pis">
                                       <expression localId="448" path="component" scope="positiveIllicitDrugScreening" xsi:type="Property"/>
                                    </source>
                                    <return localId="454">
                                       <expression localId="453" name="GetDrugNamesFromScreeningCodes" xsi:type="FunctionRef">
                                          <operand localId="452" path="coding" xsi:type="Property">
                                             <source localId="451" path="code" scope="pis" xsi:type="Property"/>
                                          </operand>
                                       </expression>
                                    </return>
                                 </operand>
                              </source>
                              <separator localId="457" valueType="t:String" value=", " xsi:type="Literal"/>
                           </else>
                        </then>
                        <else localId="462" xsi:type="Combine">
                           <source localId="460" name="illicitDrugs" xsi:type="QueryLetRef"/>
                           <separator localId="461" valueType="t:String" value=", " xsi:type="Literal"/>
                        </else>
                     </operand>
                  </then>
                  <else asType="t:String" xsi:type="As">
                     <operand localId="465" xsi:type="Null"/>
                  </else>
               </expression>
            </return>
         </expression>
      </def>
   </statements>
</library>
