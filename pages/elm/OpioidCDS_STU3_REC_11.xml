<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="OpioidCDS_STU3_REC_11" version="0.1.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <includes>
      <def localId="2" localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
      <def localId="3" localIdentifier="Common" path="OpioidCDS_STU3_Common" version="0.1.0"/>
   </includes>
   <parameters>
      <def localId="6" name="ContextPrescriptions" accessLevel="Public">
         <parameterTypeSpecifier localId="5" xsi:type="ListTypeSpecifier">
            <elementType localId="4" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="16" name="Validate Trigger Event For Benzodiazepine" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="16">
               <a:s>define &quot;Validate Trigger Event For Benzodiazepine&quot;:&#xd;
  </a:s>
               <a:s r="15">
                  <a:s>exists</a:s>
                  <a:s r="14">
                     <a:s>(&#xd;
    </a:s>
                     <a:s r="14">
                        <a:s>
                           <a:s r="8">
                              <a:s r="7">
                                 <a:s>
                                    <a:s>ContextPrescriptions</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> triggerScript</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      </a:s>
                        <a:s r="13">
                           <a:s>where </a:s>
                           <a:s r="13">
                              <a:s r="10">
                                 <a:s r="9">
                                    <a:s>triggerScript</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="10">
                                    <a:s>medication</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="12">
                                 <a:s r="11">
                                    <a:s>Common</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="12">
                                    <a:s>&quot;Benzodiazepines&quot;</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="15" xsi:type="Exists">
            <operand localId="14" xsi:type="Query">
               <source localId="8" alias="triggerScript">
                  <expression localId="7" name="ContextPrescriptions" xsi:type="ParameterRef"/>
               </source>
               <where localId="13" xsi:type="InValueSet">
                  <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand asType="fhir:CodeableConcept" xsi:type="As">
                        <operand localId="10" path="medication" scope="triggerScript" xsi:type="Property"/>
                     </operand>
                  </code>
                  <valueset localId="12" name="Benzodiazepines" libraryName="Common"/>
               </where>
            </operand>
         </expression>
      </def>
      <def localId="26" name="Validate Trigger Event For Ambulatory Care Abuse Potential" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="26">
               <a:s>define &quot;Validate Trigger Event For Ambulatory Care Abuse Potential&quot;:&#xd;
  </a:s>
               <a:s r="25">
                  <a:s>exists</a:s>
                  <a:s r="24">
                     <a:s>(&#xd;
    </a:s>
                     <a:s r="24">
                        <a:s>
                           <a:s r="18">
                              <a:s r="17">
                                 <a:s>
                                    <a:s>ContextPrescriptions</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> triggerScript</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
      </a:s>
                        <a:s r="23">
                           <a:s>where </a:s>
                           <a:s r="23">
                              <a:s r="20">
                                 <a:s r="19">
                                    <a:s>triggerScript</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="20">
                                    <a:s>medication</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> in </a:s>
                              <a:s r="22">
                                 <a:s r="21">
                                    <a:s>Common</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="22">
                                    <a:s>&quot;Ambulatory Abuse Potential Opioids&quot;</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="25" xsi:type="Exists">
            <operand localId="24" xsi:type="Query">
               <source localId="18" alias="triggerScript">
                  <expression localId="17" name="ContextPrescriptions" xsi:type="ParameterRef"/>
               </source>
               <where localId="23" xsi:type="InValueSet">
                  <code name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand asType="fhir:CodeableConcept" xsi:type="As">
                        <operand localId="20" path="medication" scope="triggerScript" xsi:type="Property"/>
                     </operand>
                  </code>
                  <valueset localId="22" name="Ambulatory Abuse Potential Opioids" libraryName="Common"/>
               </where>
            </operand>
         </expression>
      </def>
      <def localId="40" name="Exclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="40">
               <a:s>define &quot;Exclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="39">
                  <a:s r="35">
                     <a:s r="34">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="35">
                        <a:s>&quot;End of Life Assessment&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    or </a:s>
                  <a:s r="38">
                     <a:s r="36">
                        <a:s>Common</a:s>
                     </a:s>
                     <a:s>.</a:s>
                     <a:s r="38">
                        <a:s>&quot;Is Context Prescription End of Life Opioid?&quot;(</a:s>
                        <a:s r="37">
                           <a:s>ContextPrescriptions</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="39" xsi:type="Or">
            <operand localId="35" name="End of Life Assessment" libraryName="Common" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="49" name="On Benzodiazepine" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="49">
               <a:s>define &quot;On Benzodiazepine&quot;:&#xd;
  </a:s>
               <a:s r="48">
                  <a:s r="44">
                     <a:s>&quot;Validate Trigger Event For Benzodiazepine&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
  or </a:s>
                  <a:s r="47">
                     <a:s>exists</a:s>
                     <a:s r="46">
                        <a:s>( </a:s>
                        <a:s r="46">
                           <a:s r="45">
                              <a:s>Common</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="46">
                              <a:s>&quot;Active Ambulatory Benzodiazepine Rx&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> )</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="48" xsi:type="Or">
            <operand localId="44" name="Validate Trigger Event For Benzodiazepine" xsi:type="ExpressionRef"/>
            <operand localId="47" xsi:type="Exists">
               <operand localId="46" name="Active Ambulatory Benzodiazepine Rx" libraryName="Common" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="57" name="Opioid with Ambulatory Care Abuse Potential" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="57">
               <a:s>define &quot;Opioid with Ambulatory Care Abuse Potential&quot;:&#xd;
  </a:s>
               <a:s r="56">
                  <a:s r="52">
                     <a:s>&quot;Validate Trigger Event For Ambulatory Care Abuse Potential&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
  or </a:s>
                  <a:s r="55">
                     <a:s>exists</a:s>
                     <a:s r="54">
                        <a:s>( </a:s>
                        <a:s r="54">
                           <a:s r="53">
                              <a:s>Common</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="54">
                              <a:s>&quot;Active Ambulatory Opioid Rx&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> )</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="56" xsi:type="Or">
            <operand localId="52" name="Validate Trigger Event For Ambulatory Care Abuse Potential" xsi:type="ExpressionRef"/>
            <operand localId="55" xsi:type="Exists">
               <operand localId="54" name="Active Ambulatory Opioid Rx" libraryName="Common" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def localId="60" name="Inclusion Criteria" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="60">
               <a:s>define &quot;Inclusion Criteria&quot;:&#xd;
  </a:s>
               <a:s r="59">
                  <a:s r="51">
                     <a:s r="43">
                        <a:s r="33">
                           <a:s r="29">
                              <a:s r="27">
                                 <a:s>AgeInYears()</a:s>
                              </a:s>
                              <a:s r="28"> >= 18</a:s>
                           </a:s>
                           <a:s>&#xd;
    and </a:s>
                           <a:s r="32">
                              <a:s>(</a:s>
                              <a:s r="32">
                                 <a:s r="30">
                                    <a:s>&quot;Validate Trigger Event For Benzodiazepine&quot;</a:s>
                                 </a:s>
                                 <a:s>&#xd;
      or </a:s>
                                 <a:s r="31">
                                    <a:s>&quot;Validate Trigger Event For Ambulatory Care Abuse Potential&quot;</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    and </a:s>
                        <a:s r="42">
                           <a:s>not </a:s>
                           <a:s r="41">
                              <a:s>&quot;Exclusion Criteria&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    and </a:s>
                     <a:s r="50">
                        <a:s>&quot;On Benzodiazepine&quot;</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
    and </a:s>
                  <a:s r="58">
                     <a:s>&quot;Opioid with Ambulatory Care Abuse Potential&quot;</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="59" xsi:type="And">
            <operand localId="51" xsi:type="And">
               <operand localId="43" xsi:type="And">
                  <operand localId="33" xsi:type="And">
                     <operand localId="29" xsi:type="GreaterOrEqual">
                        <operand localId="27" precision="Year" xsi:type="CalculateAge">
                           <operand path="birthDate.value" xsi:type="Property">
                              <source name="Patient" xsi:type="ExpressionRef"/>
                           </operand>
                        </operand>
                        <operand localId="28" valueType="t:Integer" value="18" xsi:type="Literal"/>
                     </operand>
                     <operand localId="32" xsi:type="Or">
                        <operand localId="30" name="Validate Trigger Event For Benzodiazepine" xsi:type="ExpressionRef"/>
                        <operand localId="31" name="Validate Trigger Event For Ambulatory Care Abuse Potential" xsi:type="ExpressionRef"/>
                     </operand>
                  </operand>
                  <operand localId="42" xsi:type="Not">
                     <operand localId="41" name="Exclusion Criteria" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
               <operand localId="50" name="On Benzodiazepine" xsi:type="ExpressionRef"/>
            </operand>
            <operand localId="58" name="Opioid with Ambulatory Care Abuse Potential" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def localId="65" name="Get Indicator" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="65">
               <a:s>define &quot;Get Indicator&quot;:&#xd;
  </a:s>
               <a:s r="64">
                  <a:s>if </a:s>
                  <a:s r="61">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="62">
                     <a:s>'warning'</a:s>
                  </a:s>
                  <a:s r="63">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="64" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="61" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="62" valueType="t:String" value="warning" xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="63" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="70" name="Get Summary" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="70">
               <a:s>define &quot;Get Summary&quot;:&#xd;
  </a:s>
               <a:s r="69">
                  <a:s>if </a:s>
                  <a:s r="66">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then </a:s>
                  <a:s r="67">
                     <a:s>'Avoid prescribing opioid pain medication and benzodiazepine concurrently whenever possible.'</a:s>
                  </a:s>
                  <a:s r="68">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="69" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="66" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="67" valueType="t:String" value="Avoid prescribing opioid pain medication and benzodiazepine concurrently whenever possible." xsi:type="Literal"/>
            <else asType="t:String" xsi:type="As">
               <operand localId="68" xsi:type="Null"/>
            </else>
         </expression>
      </def>
      <def localId="78" name="Get Detail" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="78">
               <a:s>define &quot;Get Detail&quot;:&#xd;
  </a:s>
               <a:s r="77">
                  <a:s>if </a:s>
                  <a:s r="71">
                     <a:s>&quot;Inclusion Criteria&quot;</a:s>
                  </a:s>
                  <a:s>&#xd;
    then&#xd;
      </a:s>
                  <a:s r="75">
                     <a:s>if </a:s>
                     <a:s r="72">
                        <a:s>&quot;Validate Trigger Event For Benzodiazepine&quot;</a:s>
                     </a:s>
                     <a:s>&#xd;
        then </a:s>
                     <a:s r="73">
                        <a:s>'The benzodiazepine prescription request is concurrent with an active opioid prescription'</a:s>
                     </a:s>
                     <a:s>&#xd;
      else </a:s>
                     <a:s r="74">
                        <a:s>'The opioid prescription request is concurrent with an active benzodiazepine prescription'</a:s>
                     </a:s>
                  </a:s>
                  <a:s r="76">&#xd;
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="77" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="71" name="Inclusion Criteria" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="75" xsi:type="If">
               <condition asType="t:Boolean" xsi:type="As">
                  <operand localId="72" name="Validate Trigger Event For Benzodiazepine" xsi:type="ExpressionRef"/>
               </condition>
               <then localId="73" valueType="t:String" value="The benzodiazepine prescription request is concurrent with an active opioid prescription" xsi:type="Literal"/>
               <else localId="74" valueType="t:String" value="The opioid prescription request is concurrent with an active benzodiazepine prescription" xsi:type="Literal"/>
            </then>
            <else asType="t:String" xsi:type="As">
               <operand localId="76" xsi:type="Null"/>
            </else>
         </expression>
      </def>
   </statements>
</library>
